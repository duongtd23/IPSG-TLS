--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op s : -> Sys .
	red inv13(init,p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	red inv13(s,p,q,r) implies inv13(fkm11(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv13(s,p,q,r) implies inv13(fkm11(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv13(s,p,q,r) implies inv13(fkm12(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv13(s,p,q,r) implies inv13(fkm12(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	red inv13(s,p,q,r) implies inv13(fkm21(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv13(s,p,q,r) implies inv13(fkm21(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	red inv13(s,p,q,r) implies inv13(fkm22(s,r1,r2,r3,r4),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv13(s,p,q,r) implies inv13(fkm22(s,r1,r2,r3,r4),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv13(s,p,q,r) implies inv13(fkm22(s,r1,r2,r3,r4),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq p = intruder .
	red inv13(s,p,q,r) implies inv13(fkm31(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	red inv13(s,p,q,r) implies inv13(fkm31(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = true .
	red inv13(s,p,q,r) implies inv13(fkm31(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = true .
	red inv13(s,p,q,r) implies inv13(fkm31(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq r3 = enc3(q,n(q,p,r)) .
	red inv13(s,p,q,r) implies inv13(fkm31(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq (r3 = enc3(q,n(q,p,r))) = false .
	red inv13(s,p,q,r) implies inv13(fkm31(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv13(s,p,q,r) implies inv13(fkm31(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq p = intruder .
	red inv13(s,p,q,r) implies inv13(fkm32(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	red inv13(s,p,q,r) implies inv13(fkm32(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = true .
	red inv13(s,p,q,r) implies inv13(fkm32(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = true .
	red inv13(s,p,q,r) implies inv13(fkm32(s,r1,r2,r3),p,q,r) .
close

--> true, use inv3 as a lemma
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq r2 = q .
	eq r3 = n(q,p,r) .
	eq (n(q,p,r) \in cnonce(nw(s))) = true .
	red inv3(s,r3) implies inv13(s,p,q,r) implies inv13(fkm32(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq r2 = q .
	eq r3 = n(q,p,r) .
	eq (n(q,p,r) \in cnonce(nw(s))) = false .
	red inv13(s,p,q,r) implies inv13(fkm32(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq r2 = q .
	eq (r3 = n(q,p,r)) = false .
	red inv13(s,p,q,r) implies inv13(fkm32(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq (r2 = q) = false .
	red inv13(s,p,q,r) implies inv13(fkm32(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv13(s,p,q,r) implies inv13(fkm32(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv13(s,p,q,r) implies inv13(sdm1(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	red inv13(s,p,q,r) implies inv13(sdm1(s,r1,r2,r3),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv13(s,p,q,r) implies inv13(sdm2(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	red inv13(s,p,q,r) implies inv13(sdm2(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = false .
	red inv13(s,p,q,r) implies inv13(sdm2(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv13(s,p,q,r) implies inv13(sdm2(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv13(s,p,q,r) implies inv13(sdm2(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq p = intruder .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq p = r1 .
	eq r1 = intruder .
	eq (m2(r3,r2,intruder,r5) \in nw(s)) = true .
	eq (m1(intruder,intruder,r2,enc1(r2,n(intruder,r2,r4),intruder)) \in nw(s)) = true .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq p = r1 .
	eq r1 = intruder .
	eq (m2(r3,r2,intruder,r5) \in nw(s)) = true .
	eq (m1(intruder,intruder,r2,enc1(r2,n(intruder,r2,r4),intruder)) \in nw(s)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq p = r1 .
	eq r1 = intruder .
	eq (m2(r3,r2,intruder,r5) \in nw(s)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq p = r1 .
	eq (r1 = intruder) = false .
	eq q = r2 .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq p = r1 .
	eq (r1 = intruder) = false .
	eq q = r2 .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq p = r1 .
	eq (r1 = intruder) = false .
	eq q = r2 .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq p = r1 .
	eq (r1 = intruder) = false .
	eq q = r2 .
	eq (r2 = intruder) = false .
	eq nonce2(r5) = n(r2,r1,r) .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq p = r1 .
	eq (r1 = intruder) = false .
	eq q = r2 .
	eq (r2 = intruder) = false .
	eq (nonce2(r5) = n(r2,r1,r)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq p = r1 .
	eq (r1 = intruder) = false .
	eq (q = r2) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = true .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = true .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq q = r2 .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq q = r2 .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq q = r2 .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq q = r2 .
	eq (r2 = intruder) = false .
	eq (enc3(r2,n(r2,p,r)) \in cenc3(nw(s))) = true .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq q = r2 .
	eq (r2 = intruder) = false .
	eq (enc3(r2,n(r2,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,r2,enc3(r2,n(r2,p,r))) \in nw(s)) = true .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true, use inv15 as a lemma
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq q = r2 .
	eq (r2 = intruder) = false .
	eq (enc3(r2,n(r2,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,r2,enc3(r2,n(r2,p,r))) \in nw(s)) = false .
	eq nonce2(r5) = n(r2,p,r) .
	eq r1 = intruder .
	eq (m2(r3,r2,intruder,r5) \in nw(s)) = true .
	eq (m1(intruder,intruder,r2,enc1(r2,n(intruder,r2,r4),intruder)) \in nw(s)) = true .
	red inv15(s,r1,r2,r3,r4,r5) implies inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq q = r2 .
	eq (r2 = intruder) = false .
	eq (enc3(r2,n(r2,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,r2,enc3(r2,n(r2,p,r))) \in nw(s)) = false .
	eq nonce2(r5) = n(r2,p,r) .
	eq r1 = intruder .
	eq (m2(r3,r2,intruder,r5) \in nw(s)) = true .
	eq (m1(intruder,intruder,r2,enc1(r2,n(intruder,r2,r4),intruder)) \in nw(s)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq q = r2 .
	eq (r2 = intruder) = false .
	eq (enc3(r2,n(r2,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,r2,enc3(r2,n(r2,p,r))) \in nw(s)) = false .
	eq nonce2(r5) = n(r2,p,r) .
	eq r1 = intruder .
	eq (m2(r3,r2,intruder,r5) \in nw(s)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true, use inv16 as a lemma
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq q = r2 .
	eq (r2 = intruder) = false .
	eq (enc3(r2,n(r2,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,r2,enc3(r2,n(r2,p,r))) \in nw(s)) = false .
	eq nonce2(r5) = n(r2,p,r) .
	eq (r1 = intruder) = false .
	eq (m2(r2,r2,r1,r5) \in nw(s)) = true .
	red inv16(s,r2,r1,r5) implies inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true, use inv14 as a lemma
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq q = r2 .
	eq (r2 = intruder) = false .
	eq (enc3(r2,n(r2,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,r2,enc3(r2,n(r2,p,r))) \in nw(s)) = false .
	eq nonce2(r5) = n(r2,p,r) .
	eq (r1 = intruder) = false .
	eq (m2(r2,r2,r1,r5) \in nw(s)) = false .
	red inv14(s,r1,r2,r3,r4,r5) implies inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq q = r2 .
	eq (r2 = intruder) = false .
	eq (enc3(r2,n(r2,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,r2,enc3(r2,n(r2,p,r))) \in nw(s)) = false .
	eq (nonce2(r5) = n(r2,p,r)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (p = r1) = false .
	eq (enc3(q,n(q,p,r)) \in cenc3(nw(s))) = false .
	eq (m3(p,p,q,enc3(q,n(q,p,r))) \in nw(s)) = false .
	eq (q = r2) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1,r2,r4)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> true
open INV .
  :id(inv13)
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv13(s,p,q,r) implies inv13(sdm3(s,r1,r2,r3,r4,r5),p,q,r) .
close

--> Time taken is 15933ms