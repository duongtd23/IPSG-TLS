--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op s : -> Sys .
	red inv7(init, p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm11(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm11(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm12(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm12(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq q1 = intruder .
	eq p = r2 .
	eq q = r1 .
	eq r1 = intruder .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm21(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq q1 = intruder .
	eq p = r2 .
	eq q = r1 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm21(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true, use inv12 as a lemma 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq q1 = intruder .
	eq p = r2 .
	eq q = r1 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r3 = enc2(r2, n(r2, r1, r), n, r1) .
	eq (enc2(r2, n(r2, r1, r), n, r1) \in cenc2(nw(s))) = true .
	red inv12(s, p, q, r, r3) implies inv7(s, p, q, q1, r, n) implies inv7(fkm21(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq q1 = intruder .
	eq p = r2 .
	eq q = r1 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r3 = enc2(r2, n(r2, r1, r), n, r1) .
	eq (enc2(r2, n(r2, r1, r), n, r1) \in cenc2(nw(s))) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm21(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq q1 = intruder .
	eq p = r2 .
	eq q = r1 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r3 = enc2(r2, n(r2, r1, r), n, r1)) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm21(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq q1 = intruder .
	eq p = r2 .
	eq (q = r1) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm21(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq q1 = intruder .
	eq (p = r2) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm21(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (q1 = intruder) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm21(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm21(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq n = r4 .
	eq q1 = intruder .
	eq p = r2 .
	eq q = r1 .
	eq r1 = intruder .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm22(s, r1, r2, r3, r4), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq n = r4 .
	eq q1 = intruder .
	eq p = r2 .
	eq q = r1 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm22(s, r1, r2, r3, r4), p, q, q1, r, n) .
close

--> true, use inv3 as a lemma 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq n = r4 .
	eq q1 = intruder .
	eq p = r2 .
	eq q = r1 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r3 = n(r2, r1, r) .
	eq (n(r2, r1, r) \in cnonce(nw(s))) = true .
	red inv3(s, r3) implies inv7(s, p, q, q1, r, n) implies inv7(fkm22(s, r1, r2, r3, r4), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq n = r4 .
	eq q1 = intruder .
	eq p = r2 .
	eq q = r1 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r3 = n(r2, r1, r) .
	eq (n(r2, r1, r) \in cnonce(nw(s))) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm22(s, r1, r2, r3, r4), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq n = r4 .
	eq q1 = intruder .
	eq p = r2 .
	eq q = r1 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r3 = n(r2, r1, r)) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm22(s, r1, r2, r3, r4), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq n = r4 .
	eq q1 = intruder .
	eq p = r2 .
	eq (q = r1) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm22(s, r1, r2, r3, r4), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq n = r4 .
	eq q1 = intruder .
	eq (p = r2) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm22(s, r1, r2, r3, r4), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq n = r4 .
	eq (q1 = intruder) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm22(s, r1, r2, r3, r4), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (n = r4) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm22(s, r1, r2, r3, r4), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm22(s, r1, r2, r3, r4), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm22(s, r1, r2, r3, r4), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm31(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm31(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm32(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(fkm32(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm1(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq q = r2 .
	eq r = r3 .
	eq r1 = intruder .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm1(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true, use inv9 as a lemma 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq q = r2 .
	eq r = r3 .
	eq (r1 = intruder) = false .
	eq (m2(q1, r2, r1, enc2(r1, n(r1, r2, r3), n, r2)) \in nw(s)) = true .
	red inv9(s, m2(q1, r2, r1, enc2(r1, n(r1, r2, r3), n, r2))) implies inv7(s, p, q, q1, r, n) implies inv7(sdm1(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq q = r2 .
	eq r = r3 .
	eq (r1 = intruder) = false .
	eq (m2(q1, r2, r1, enc2(r1, n(r1, r2, r3), n, r2)) \in nw(s)) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm1(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq q = r2 .
	eq (r = r3) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm1(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq (q = r2) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm1(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (p = r1) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm1(s, r1, r2, r3), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm2(s, r1, r2, r3, r4, r5), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm2(s, r1, r2, r3, r4, r5), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm2(s, r1, r2, r3, r4, r5), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm2(s, r1, r2, r3, r4, r5), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm2(s, r1, r2, r3, r4, r5), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm3(s, r1, r2, r3, r4, r5), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm3(s, r1, r2, r3, r4, r5), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1, r2, r4)) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm3(s, r1, r2, r3, r4, r5), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm3(s, r1, r2, r3, r4, r5), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm3(s, r1, r2, r3, r4, r5), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op q : -> Prin .
	op q1 : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv7(s, p, q, q1, r, n) implies inv7(sdm3(s, r1, r2, r3, r4, r5), p, q, q1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op s : -> Sys .
	red inv8(init, p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm11(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm11(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm12(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm12(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm21(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm21(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm22(s, r1, r2, r3, r4), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm22(s, r1, r2, r3, r4), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm22(s, r1, r2, r3, r4), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq p1 = intruder .
	eq p = r1 .
	eq q = r2 .
	eq r1 = intruder .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm31(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq p1 = intruder .
	eq p = r1 .
	eq q = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm31(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true, use inv13 as a lemma 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq p1 = intruder .
	eq p = r1 .
	eq q = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r3 = enc3(r2, n(r2, r1, r)) .
	eq (enc3(r2, n(r2, r1, r)) \in cenc3(nw(s))) = true .
	red inv13(s, p, q, r) implies inv8(s, p, q, p1, r, n) implies inv8(fkm31(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq p1 = intruder .
	eq p = r1 .
	eq q = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r3 = enc3(r2, n(r2, r1, r)) .
	eq (enc3(r2, n(r2, r1, r)) \in cenc3(nw(s))) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm31(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq p1 = intruder .
	eq p = r1 .
	eq q = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r3 = enc3(r2, n(r2, r1, r))) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm31(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq p1 = intruder .
	eq p = r1 .
	eq (q = r2) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm31(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq p1 = intruder .
	eq (p = r1) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm31(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (p1 = intruder) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm31(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm31(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq p1 = intruder .
	eq p = r1 .
	eq q = r2 .
	eq r1 = intruder .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm32(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq p1 = intruder .
	eq p = r1 .
	eq q = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm32(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true, use inv3 as a lemma 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq p1 = intruder .
	eq p = r1 .
	eq q = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r3 = n(r2, r1, r) .
	eq (n(r2, r1, r) \in cnonce(nw(s))) = true .
	red inv3(s, r3) implies inv8(s, p, q, p1, r, n) implies inv8(fkm32(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq p1 = intruder .
	eq p = r1 .
	eq q = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r3 = n(r2, r1, r) .
	eq (n(r2, r1, r) \in cnonce(nw(s))) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm32(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq p1 = intruder .
	eq p = r1 .
	eq q = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r3 = n(r2, r1, r)) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm32(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq p1 = intruder .
	eq p = r1 .
	eq (q = r2) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm32(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq p1 = intruder .
	eq (p = r1) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm32(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (p1 = intruder) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm32(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(fkm32(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm1(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm1(s, r1, r2, r3), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm2(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq p = r2 .
	eq q = r4 .
	eq r = r1 .
	eq r4 = intruder .
	eq (m1(r3, r2, intruder, r5) \in nw(s)) = true .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm2(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq p = r2 .
	eq q = r4 .
	eq r = r1 .
	eq r4 = intruder .
	eq (m1(r3, r2, intruder, r5) \in nw(s)) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm2(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true, use inv11 as a lemma 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq p = r2 .
	eq q = r4 .
	eq r = r1 .
	eq (r4 = intruder) = false .
	eq nonce(r5) = n .
	eq (m3(p1, r2, r4, enc3(r4, n(r4, r2, r1))) \in nw(s)) = true .
	red inv11(s, m3(p1, r2, r4, enc3(r4, n(r4, r2, r1)))) implies inv8(s, p, q, p1, r, n) implies inv8(sdm2(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq p = r2 .
	eq q = r4 .
	eq r = r1 .
	eq (r4 = intruder) = false .
	eq nonce(r5) = n .
	eq (m3(p1, r2, r4, enc3(r4, n(r4, r2, r1))) \in nw(s)) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm2(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq p = r2 .
	eq q = r4 .
	eq r = r1 .
	eq (r4 = intruder) = false .
	eq (nonce(r5) = n) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm2(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq p = r2 .
	eq q = r4 .
	eq (r = r1) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm2(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq p = r2 .
	eq (q = r4) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm2(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = r2) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm2(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm2(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm2(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm2(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm3(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm3(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1, r2, r4)) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm3(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm3(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm3(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op p : -> Prin .
	op p1 : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv8(s, p, q, p1, r, n) implies inv8(sdm3(s, r1, r2, r3, r4, r5), p, q, p1, r, n) .
close

--> Time taken is 2256ms