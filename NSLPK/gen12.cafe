--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op s : -> Sys .
	red inv12(init, p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	red inv12(s, p, q, r, e2) implies inv12(fkm11(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm11(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv12(s, p, q, r, e2) implies inv12(fkm12(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm12(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq p = intruder .
	red inv12(s, p, q, r, e2) implies inv12(fkm21(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (p = intruder) = false .
	eq e2 = r3 .
	red inv12(s, p, q, r, e2) implies inv12(fkm21(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (p = intruder) = false .
	eq (e2 = r3) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm21(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm21(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq p = intruder .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq r2 = p .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq e2 = enc2(p, r3, r4, intruder) .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq r2 = p .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq (e2 = enc2(p, r3, r4, intruder)) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq r2 = p .
	eq principal(e2) = intruder .
	eq (key(e2) = p) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq r2 = p .
	eq (principal(e2) = intruder) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq (r2 = p) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq nonce1(e2) = n(p, intruder, r) .
	eq (e2 \in cenc2(nw(s))) = true .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq (r2 = p) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq nonce1(e2) = n(p, intruder, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(intruder, intruder, p, e2) \in nw(s)) = true .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq (r2 = p) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq nonce1(e2) = n(p, intruder, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(intruder, intruder, p, e2) \in nw(s)) = false .
	eq (m1(p, p, intruder, enc1(intruder, n(p, intruder, r), p)) \in nw(s)) = true .
	eq r2 = intruder .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq (r2 = p) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq nonce1(e2) = n(p, intruder, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(intruder, intruder, p, e2) \in nw(s)) = false .
	eq (m1(p, p, intruder, enc1(intruder, n(p, intruder, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, r3, r4, intruder) .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq (r2 = p) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq nonce1(e2) = n(p, intruder, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(intruder, intruder, p, e2) \in nw(s)) = false .
	eq (m1(p, p, intruder, enc1(intruder, n(p, intruder, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq (e2 = enc2(r2, r3, r4, intruder)) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq (r2 = p) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq nonce1(e2) = n(p, intruder, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(intruder, intruder, p, e2) \in nw(s)) = false .
	eq (m1(p, p, intruder, enc1(intruder, n(p, intruder, r), p)) \in nw(s)) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq (r2 = p) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq (nonce1(e2) = n(p, intruder, r)) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq (r2 = p) = false .
	eq principal(e2) = intruder .
	eq (key(e2) = p) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq r1 = intruder .
	eq (r2 = p) = false .
	eq (principal(e2) = intruder) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq (r1 = intruder) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq nonce1(e2) = n(p, intruder, r) .
	eq (e2 \in cenc2(nw(s))) = true .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq (r1 = intruder) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq nonce1(e2) = n(p, intruder, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(intruder, intruder, p, e2) \in nw(s)) = true .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq (r1 = intruder) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq nonce1(e2) = n(p, intruder, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(intruder, intruder, p, e2) \in nw(s)) = false .
	eq (m1(p, p, intruder, enc1(intruder, n(p, intruder, r), p)) \in nw(s)) = true .
	eq r2 = intruder .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq (r1 = intruder) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq nonce1(e2) = n(p, intruder, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(intruder, intruder, p, e2) \in nw(s)) = false .
	eq (m1(p, p, intruder, enc1(intruder, n(p, intruder, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, r3, r4, r1) .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq (r1 = intruder) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq nonce1(e2) = n(p, intruder, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(intruder, intruder, p, e2) \in nw(s)) = false .
	eq (m1(p, p, intruder, enc1(intruder, n(p, intruder, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq (e2 = enc2(r2, r3, r4, r1)) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq (r1 = intruder) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq nonce1(e2) = n(p, intruder, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(intruder, intruder, p, e2) \in nw(s)) = false .
	eq (m1(p, p, intruder, enc1(intruder, n(p, intruder, r), p)) \in nw(s)) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq (r1 = intruder) = false .
	eq principal(e2) = intruder .
	eq key(e2) = p .
	eq (nonce1(e2) = n(p, intruder, r)) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq (r1 = intruder) = false .
	eq principal(e2) = intruder .
	eq (key(e2) = p) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq q = intruder .
	eq (r1 = intruder) = false .
	eq (principal(e2) = intruder) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = true .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = true .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = true .
	eq r2 = intruder .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, r3, r4, r1) .
	eq p = r2 .
	eq q = r1 .
	eq r1 = intruder .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true, use inv3 as a lemma 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, r3, r4, r1) .
	eq p = r2 .
	eq q = r1 .
	eq (r1 = intruder) = false .
	eq r3 = n(r2, r1, r) .
	eq (n(r2, r1, r) \in cnonce(nw(s))) = true .
	red inv3(s, r3) implies inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, r3, r4, r1) .
	eq p = r2 .
	eq q = r1 .
	eq (r1 = intruder) = false .
	eq r3 = n(r2, r1, r) .
	eq (n(r2, r1, r) \in cnonce(nw(s))) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, r3, r4, r1) .
	eq p = r2 .
	eq q = r1 .
	eq (r1 = intruder) = false .
	eq (r3 = n(r2, r1, r)) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, r3, r4, r1) .
	eq p = r2 .
	eq (q = r1) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, r3, r4, r1) .
	eq (p = r2) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq (e2 = enc2(r2, r3, r4, r1)) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq (nonce1(e2) = n(p, q, r)) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq key(e2) = p .
	eq (principal(e2) = q) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (p = intruder) = false .
	eq (q = intruder) = false .
	eq (key(e2) = p) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm22(s, r1, r2, r3, r4), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	red inv12(s, p, q, r, e2) implies inv12(fkm31(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm31(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv12(s, p, q, r, e2) implies inv12(fkm32(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv12(s, p, q, r, e2) implies inv12(fkm32(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv12(s, p, q, r, e2) implies inv12(sdm1(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq q = r2 .
	eq r = r3 .
	eq r1 = intruder .
	red inv12(s, p, q, r, e2) implies inv12(sdm1(s, r1, r2, r3), p, q, r, e2) .
close

--> true, use inv19 as a lemma 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq q = r2 .
	eq r = r3 .
	eq (r1 = intruder) = false .
	eq key(e2) = r1 .
	eq principal(e2) = r2 .
	eq (e2 \in cenc2(nw(s))) = true .
	eq nonce1(e2) = n(r1, r2, r3) .
	red inv19(s, e2) implies inv12(s, p, q, r, e2) implies inv12(sdm1(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq q = r2 .
	eq r = r3 .
	eq (r1 = intruder) = false .
	eq key(e2) = r1 .
	eq principal(e2) = r2 .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce1(e2) = n(r1, r2, r3)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm1(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq q = r2 .
	eq r = r3 .
	eq (r1 = intruder) = false .
	eq key(e2) = r1 .
	eq principal(e2) = r2 .
	eq (e2 \in cenc2(nw(s))) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm1(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq q = r2 .
	eq r = r3 .
	eq (r1 = intruder) = false .
	eq key(e2) = r1 .
	eq (principal(e2) = r2) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm1(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq q = r2 .
	eq r = r3 .
	eq (r1 = intruder) = false .
	eq (key(e2) = r1) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm1(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq q = r2 .
	eq (r = r3) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm1(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq p = r1 .
	eq (q = r2) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm1(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (p = r1) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm1(s, r1, r2, r3), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq p = intruder .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = true .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq (r2 = intruder) = false .
	eq q = r4 .
	eq key(e2) = r2 .
	eq principal(e2) = r4 .
	eq e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4) .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq (r2 = intruder) = false .
	eq q = r4 .
	eq key(e2) = r2 .
	eq principal(e2) = r4 .
	eq (e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq (r2 = intruder) = false .
	eq q = r4 .
	eq key(e2) = r2 .
	eq (principal(e2) = r4) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq (r2 = intruder) = false .
	eq q = r4 .
	eq (key(e2) = r2) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq (r2 = intruder) = false .
	eq (q = r4) = false .
	eq principal(e2) = q .
	eq key(e2) = r2 .
	eq nonce1(e2) = n(r2, q, r) .
	eq (e2 \in cenc2(nw(s))) = true .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq (r2 = intruder) = false .
	eq (q = r4) = false .
	eq principal(e2) = q .
	eq key(e2) = r2 .
	eq nonce1(e2) = n(r2, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, r2, e2) \in nw(s)) = true .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq (r2 = intruder) = false .
	eq (q = r4) = false .
	eq principal(e2) = q .
	eq key(e2) = r2 .
	eq nonce1(e2) = n(r2, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, r2, e2) \in nw(s)) = false .
	eq (m1(r2, r2, q, enc1(q, n(r2, q, r), r2)) \in nw(s)) = true .
	eq e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4) .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq (r2 = intruder) = false .
	eq (q = r4) = false .
	eq principal(e2) = q .
	eq key(e2) = r2 .
	eq nonce1(e2) = n(r2, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, r2, e2) \in nw(s)) = false .
	eq (m1(r2, r2, q, enc1(q, n(r2, q, r), r2)) \in nw(s)) = true .
	eq (e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq (r2 = intruder) = false .
	eq (q = r4) = false .
	eq principal(e2) = q .
	eq key(e2) = r2 .
	eq nonce1(e2) = n(r2, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, r2, e2) \in nw(s)) = false .
	eq (m1(r2, r2, q, enc1(q, n(r2, q, r), r2)) \in nw(s)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq (r2 = intruder) = false .
	eq (q = r4) = false .
	eq principal(e2) = q .
	eq key(e2) = r2 .
	eq (nonce1(e2) = n(r2, q, r)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq (r2 = intruder) = false .
	eq (q = r4) = false .
	eq principal(e2) = q .
	eq (key(e2) = r2) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq p = r2 .
	eq (r2 = intruder) = false .
	eq (q = r4) = false .
	eq (principal(e2) = q) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (p = r2) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = true .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (p = r2) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = true .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (p = r2) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = true .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = true .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (p = r2) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = true .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (p = r2) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4) .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (p = r2) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = true .
	eq (r2 = intruder) = false .
	eq (e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (p = r2) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq nonce1(e2) = n(p, q, r) .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (m2(q, q, p, e2) \in nw(s)) = false .
	eq (m1(p, p, q, enc1(q, n(p, q, r), p)) \in nw(s)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (p = r2) = false .
	eq key(e2) = p .
	eq principal(e2) = q .
	eq (nonce1(e2) = n(p, q, r)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (p = r2) = false .
	eq key(e2) = p .
	eq (principal(e2) = q) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (p = intruder) = false .
	eq (p = r2) = false .
	eq (key(e2) = p) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm2(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	red inv12(s, p, q, r, e2) implies inv12(sdm3(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm3(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1, r2, r4)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm3(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm3(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm3(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op p : -> Prin .
	op q : -> Prin .
	op r : -> Rand .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv12(s, p, q, r, e2) implies inv12(sdm3(s, r1, r2, r3, r4, r5), p, q, r, e2) .
close

--> Time taken is 1500ms