--> true
open INV .
	op c1 : -> Cipher1 .
	op s : -> Sys .
	red inv0(init,c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq key(c1) = intruder .
	eq (c1 \in cenc1(nw(s))) = true .
	red inv0(s,c1) implies inv0(fkm11(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq key(c1) = intruder .
	eq (c1 \in cenc1(nw(s))) = false .
	eq c1 = r3 .
	red inv0(s,c1) implies inv0(fkm11(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq key(c1) = intruder .
	eq (c1 \in cenc1(nw(s))) = false .
	eq (c1 = r3) = false .
	red inv0(s,c1) implies inv0(fkm11(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (key(c1) = intruder) = false .
	red inv0(s,c1) implies inv0(fkm11(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv0(s,c1) implies inv0(fkm11(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq key(c1) = intruder .
	eq (c1 \in cenc1(nw(s))) = true .
	red inv0(s,c1) implies inv0(fkm12(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq key(c1) = intruder .
	eq (c1 \in cenc1(nw(s))) = false .
	eq r2 = intruder .
	red inv0(s,c1) implies inv0(fkm12(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq key(c1) = intruder .
	eq (c1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq c1 = enc1(r2,r3,r1) .
	red inv0(s,c1) implies inv0(fkm12(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq key(c1) = intruder .
	eq (c1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (c1 = enc1(r2,r3,r1)) = false .
	red inv0(s,c1) implies inv0(fkm12(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (key(c1) = intruder) = false .
	red inv0(s,c1) implies inv0(fkm12(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv0(s,c1) implies inv0(fkm12(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	red inv0(s,c1) implies inv0(fkm21(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv0(s,c1) implies inv0(fkm21(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	red inv0(s,c1) implies inv0(fkm22(s,r1,r2,r3,r4),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv0(s,c1) implies inv0(fkm22(s,r1,r2,r3,r4),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv0(s,c1) implies inv0(fkm22(s,r1,r2,r3,r4),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	red inv0(s,c1) implies inv0(fkm31(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv0(s,c1) implies inv0(fkm31(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv0(s,c1) implies inv0(fkm32(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv0(s,c1) implies inv0(fkm32(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv0(s,c1) implies inv0(sdm1(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq key(c1) = intruder .
	eq (c1 \in cenc1(nw(s))) = true .
	red inv0(s,c1) implies inv0(sdm1(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq key(c1) = intruder .
	eq (c1 \in cenc1(nw(s))) = false .
	eq r2 = intruder .
	red inv0(s,c1) implies inv0(sdm1(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq key(c1) = intruder .
	eq (c1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq c1 = enc1(r2,n(r1,r2,r3),r1) .
	red inv0(s,c1) implies inv0(sdm1(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq key(c1) = intruder .
	eq (c1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (c1 = enc1(r2,n(r1,r2,r3),r1)) = false .
	red inv0(s,c1) implies inv0(sdm1(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (key(c1) = intruder) = false .
	red inv0(s,c1) implies inv0(sdm1(s,r1,r2,r3),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv0(s,c1) implies inv0(sdm2(s,r1,r2,r3,r4,r5),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	red inv0(s,c1) implies inv0(sdm2(s,r1,r2,r3,r4,r5),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = false .
	red inv0(s,c1) implies inv0(sdm2(s,r1,r2,r3,r4,r5),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv0(s,c1) implies inv0(sdm2(s,r1,r2,r3,r4,r5),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv0(s,c1) implies inv0(sdm2(s,r1,r2,r3,r4,r5),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	red inv0(s,c1) implies inv0(sdm3(s,r1,r2,r3,r4,r5),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = false .
	red inv0(s,c1) implies inv0(sdm3(s,r1,r2,r3,r4,r5),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1,r2,r4)) = false .
	red inv0(s,c1) implies inv0(sdm3(s,r1,r2,r3,r4,r5),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = false .
	red inv0(s,c1) implies inv0(sdm3(s,r1,r2,r3,r4,r5),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv0(s,c1) implies inv0(sdm3(s,r1,r2,r3,r4,r5),c1) .
close

--> true
open INV .
	op c1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv0(s,c1) implies inv0(sdm3(s,r1,r2,r3,r4,r5),c1) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op s : -> Sys .
	red inv1(init,c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	red inv1(s,c2) implies inv1(fkm11(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv1(s,c2) implies inv1(fkm11(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv1(s,c2) implies inv1(fkm12(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv1(s,c2) implies inv1(fkm12(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq key(c2) = intruder .
	eq (c2 \in cenc2(nw(s))) = true .
	red inv1(s,c2) implies inv1(fkm21(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq key(c2) = intruder .
	eq (c2 \in cenc2(nw(s))) = false .
	eq c2 = r3 .
	red inv1(s,c2) implies inv1(fkm21(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq key(c2) = intruder .
	eq (c2 \in cenc2(nw(s))) = false .
	eq (c2 = r3) = false .
	red inv1(s,c2) implies inv1(fkm21(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (key(c2) = intruder) = false .
	red inv1(s,c2) implies inv1(fkm21(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv1(s,c2) implies inv1(fkm21(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq key(c2) = intruder .
	eq (c2 \in cenc2(nw(s))) = true .
	red inv1(s,c2) implies inv1(fkm22(s,r1,r2,r3,r4),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq key(c2) = intruder .
	eq (c2 \in cenc2(nw(s))) = false .
	eq r2 = intruder .
	red inv1(s,c2) implies inv1(fkm22(s,r1,r2,r3,r4),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq key(c2) = intruder .
	eq (c2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq c2 = enc2(r2,r3,r4,r1) .
	red inv1(s,c2) implies inv1(fkm22(s,r1,r2,r3,r4),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq key(c2) = intruder .
	eq (c2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (c2 = enc2(r2,r3,r4,r1)) = false .
	red inv1(s,c2) implies inv1(fkm22(s,r1,r2,r3,r4),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (key(c2) = intruder) = false .
	red inv1(s,c2) implies inv1(fkm22(s,r1,r2,r3,r4),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv1(s,c2) implies inv1(fkm22(s,r1,r2,r3,r4),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv1(s,c2) implies inv1(fkm22(s,r1,r2,r3,r4),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	red inv1(s,c2) implies inv1(fkm31(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv1(s,c2) implies inv1(fkm31(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv1(s,c2) implies inv1(fkm32(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv1(s,c2) implies inv1(fkm32(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv1(s,c2) implies inv1(sdm1(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	red inv1(s,c2) implies inv1(sdm1(s,r1,r2,r3),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv1(s,c2) implies inv1(sdm2(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq key(c2) = intruder .
	eq (c2 \in cenc2(nw(s))) = true .
	red inv1(s,c2) implies inv1(sdm2(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq key(c2) = intruder .
	eq (c2 \in cenc2(nw(s))) = false .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	red inv1(s,c2) implies inv1(sdm2(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq key(c2) = intruder .
	eq (c2 \in cenc2(nw(s))) = false .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = false .
	red inv1(s,c2) implies inv1(sdm2(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq key(c2) = intruder .
	eq (c2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq c2 = enc2(r2,nonce(r5),n(r4,r2,r1),r4) .
	red inv1(s,c2) implies inv1(sdm2(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq key(c2) = intruder .
	eq (c2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (c2 = enc2(r2,nonce(r5),n(r4,r2,r1),r4)) = false .
	red inv1(s,c2) implies inv1(sdm2(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (key(c2) = intruder) = false .
	red inv1(s,c2) implies inv1(sdm2(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = false .
	red inv1(s,c2) implies inv1(sdm2(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv1(s,c2) implies inv1(sdm2(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv1(s,c2) implies inv1(sdm2(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	red inv1(s,c2) implies inv1(sdm3(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = false .
	red inv1(s,c2) implies inv1(sdm3(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1,r2,r4)) = false .
	red inv1(s,c2) implies inv1(sdm3(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = false .
	red inv1(s,c2) implies inv1(sdm3(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv1(s,c2) implies inv1(sdm3(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv1(s,c2) implies inv1(sdm3(s,r1,r2,r3,r4,r5),c2) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op s : -> Sys .
	red inv2(init,c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	red inv2(s,c3) implies inv2(fkm11(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv2(s,c3) implies inv2(fkm11(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv2(s,c3) implies inv2(fkm12(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv2(s,c3) implies inv2(fkm12(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	red inv2(s,c3) implies inv2(fkm21(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv2(s,c3) implies inv2(fkm21(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	red inv2(s,c3) implies inv2(fkm22(s,r1,r2,r3,r4),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv2(s,c3) implies inv2(fkm22(s,r1,r2,r3,r4),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv2(s,c3) implies inv2(fkm22(s,r1,r2,r3,r4),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = true .
	red inv2(s,c3) implies inv2(fkm31(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = false .
	eq c3 = r3 .
	red inv2(s,c3) implies inv2(fkm31(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = false .
	eq (c3 = r3) = false .
	red inv2(s,c3) implies inv2(fkm31(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (key(c3) = intruder) = false .
	red inv2(s,c3) implies inv2(fkm31(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv2(s,c3) implies inv2(fkm31(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = true .
	red inv2(s,c3) implies inv2(fkm32(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = false .
	eq r2 = intruder .
	red inv2(s,c3) implies inv2(fkm32(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq c3 = enc3(r2,r3) .
	red inv2(s,c3) implies inv2(fkm32(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (c3 = enc3(r2,r3)) = false .
	red inv2(s,c3) implies inv2(fkm32(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (key(c3) = intruder) = false .
	red inv2(s,c3) implies inv2(fkm32(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv2(s,c3) implies inv2(fkm32(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv2(s,c3) implies inv2(sdm1(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	red inv2(s,c3) implies inv2(sdm1(s,r1,r2,r3),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv2(s,c3) implies inv2(sdm2(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	red inv2(s,c3) implies inv2(sdm2(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = false .
	red inv2(s,c3) implies inv2(sdm2(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv2(s,c3) implies inv2(sdm2(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv2(s,c3) implies inv2(sdm2(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = true .
	red inv2(s,c3) implies inv2(sdm3(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = false .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	red inv2(s,c3) implies inv2(sdm3(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = false .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = false .
	red inv2(s,c3) implies inv2(sdm3(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = false .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = false .
	red inv2(s,c3) implies inv2(sdm3(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq c3 = enc3(r2,nonce2(r5)) .
	red inv2(s,c3) implies inv2(sdm3(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq key(c3) = intruder .
	eq (c3 \in cenc3(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (c3 = enc3(r2,nonce2(r5))) = false .
	red inv2(s,c3) implies inv2(sdm3(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (key(c3) = intruder) = false .
	red inv2(s,c3) implies inv2(sdm3(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = false .
	red inv2(s,c3) implies inv2(sdm3(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1,r2,r4)) = false .
	red inv2(s,c3) implies inv2(sdm3(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = false .
	red inv2(s,c3) implies inv2(sdm3(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv2(s,c3) implies inv2(sdm3(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op c3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv2(s,c3) implies inv2(sdm3(s,r1,r2,r3,r4,r5),c3) .
close

--> true
open INV .
	op n : -> Nonce .
	op s : -> Sys .
	red inv3(init,n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq creator(n) = intruder .
	red inv3(s,n) implies inv3(fkm11(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq forwhom(n) = intruder .
	red inv3(s,n) implies inv3(fkm11(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = true .
	red inv3(s,n) implies inv3(fkm11(s,r1,r2,r3),n) .
close

--> true, use inv0 as a lemma
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq nonce(r3) = n .
	eq key(r3) = intruder .
	red inv0(s,r3) implies inv3(s,n) implies inv3(fkm11(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq nonce(r3) = n .
	eq (key(r3) = intruder) = false .
	red inv3(s,n) implies inv3(fkm11(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (nonce(r3) = n) = false .
	red inv3(s,n) implies inv3(fkm11(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv3(s,n) implies inv3(fkm11(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	red inv3(s,n) implies inv3(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq forwhom(n) = intruder .
	red inv3(s,n) implies inv3(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = true .
	red inv3(s,n) implies inv3(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq n = r3 .
	red inv3(s,n) implies inv3(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (n = r3) = false .
	red inv3(s,n) implies inv3(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv3(s,n) implies inv3(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq creator(n) = intruder .
	red inv3(s,n) implies inv3(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq forwhom(n) = intruder .
	red inv3(s,n) implies inv3(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = true .
	red inv3(s,n) implies inv3(fkm21(s,r1,r2,r3),n) .
close

--> true, use inv1 as a lemma
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq nonce1(r3) = n .
	eq key(r3) = intruder .
	red inv1(s,r3) implies inv3(s,n) implies inv3(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq nonce1(r3) = n .
	eq (key(r3) = intruder) = false .
	red inv3(s,n) implies inv3(fkm21(s,r1,r2,r3),n) .
close

--> true, use inv1 as a lemma
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (nonce1(r3) = n) = false .
	eq nonce2(r3) = n .
	eq key(r3) = intruder .
	red inv1(s,r3) implies inv3(s,n) implies inv3(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (nonce1(r3) = n) = false .
	eq nonce2(r3) = n .
	eq (key(r3) = intruder) = false .
	red inv3(s,n) implies inv3(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (nonce1(r3) = n) = false .
	eq (nonce2(r3) = n) = false .
	red inv3(s,n) implies inv3(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv3(s,n) implies inv3(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	red inv3(s,n) implies inv3(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq forwhom(n) = intruder .
	red inv3(s,n) implies inv3(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = true .
	red inv3(s,n) implies inv3(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq n = r3 .
	red inv3(s,n) implies inv3(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (n = r3) = false .
	eq n = r4 .
	red inv3(s,n) implies inv3(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (n = r3) = false .
	eq (n = r4) = false .
	red inv3(s,n) implies inv3(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv3(s,n) implies inv3(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv3(s,n) implies inv3(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq creator(n) = intruder .
	red inv3(s,n) implies inv3(fkm31(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq forwhom(n) = intruder .
	red inv3(s,n) implies inv3(fkm31(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = true .
	red inv3(s,n) implies inv3(fkm31(s,r1,r2,r3),n) .
close

--> true, use inv2 as a lemma
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq nonce(r3) = n .
	eq key(r3) = intruder .
	red inv2(s,r3) implies inv3(s,n) implies inv3(fkm31(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq nonce(r3) = n .
	eq (key(r3) = intruder) = false .
	red inv3(s,n) implies inv3(fkm31(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (nonce(r3) = n) = false .
	red inv3(s,n) implies inv3(fkm31(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv3(s,n) implies inv3(fkm31(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	red inv3(s,n) implies inv3(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq forwhom(n) = intruder .
	red inv3(s,n) implies inv3(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = true .
	red inv3(s,n) implies inv3(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq n = r3 .
	red inv3(s,n) implies inv3(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (n = r3) = false .
	red inv3(s,n) implies inv3(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv3(s,n) implies inv3(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv3(s,n) implies inv3(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq creator(n) = intruder .
	red inv3(s,n) implies inv3(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (creator(n) = intruder) = false .
	eq forwhom(n) = intruder .
	red inv3(s,n) implies inv3(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = true .
	red inv3(s,n) implies inv3(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq n = n(r1,intruder,r3) .
	red inv3(s,n) implies inv3(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (n = n(r1,intruder,r3)) = false .
	red inv3(s,n) implies inv3(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (r2 = intruder) = false .
	red inv3(s,n) implies inv3(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq creator(n) = intruder .
	red inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq forwhom(n) = intruder .
	red inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = true .
	red inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true, use inv4 as a lemma
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq nonce(r5) = n .
	eq (r5 \in cenc1(nw(s))) = true .
	red inv4(s,r5) implies inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true, use lm1 as a lemma
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq nonce(r5) = n .
	eq (r5 \in cenc1(nw(s))) = false .
	eq r4 = intruder .
	eq (m1(r3,intruder,intruder,r5) \in nw(s)) = true .
	red lm1(m1(r3,intruder,r4,r5),nw(s)) implies inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq nonce(r5) = n .
	eq (r5 \in cenc1(nw(s))) = false .
	eq r4 = intruder .
	eq (m1(r3,intruder,intruder,r5) \in nw(s)) = false .
	red inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true, use lm2 as a lemma
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq nonce(r5) = n .
	eq (r5 \in cenc1(nw(s))) = false .
	eq (r4 = intruder) = false .
	red lm2(r5,m1(r3,intruder,r4,r5),nw(s)) implies inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq (nonce(r5) = n) = false .
	eq n = n(r4,intruder,r1) .
	red inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq (nonce(r5) = n) = false .
	eq (n = n(r4,intruder,r1)) = false .
	red inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = false .
	red inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (r2 = intruder) = false .
	red inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = false .
	red inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv3(s,n) implies inv3(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq creator(n) = intruder .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq forwhom(n) = intruder .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = true .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true, use inv5 as a lemma
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	eq nonce2(r5) = n .
	eq (r5 \in cenc2(nw(s))) = true .
	red inv5(s,r5) implies inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true, use lm3 as a lemma
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	eq nonce2(r5) = n .
	eq (r5 \in cenc2(nw(s))) = false .
	eq r1 = intruder .
	eq (m2(r3,intruder,intruder,r5) \in nw(s)) = true .
	eq (m1(intruder,intruder,intruder,enc1(intruder,n(intruder,intruder,r4),intruder)) \in nw(s)) = true .
	red lm3(m2(r3,intruder,r1,r5),nw(s)) implies inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	eq nonce2(r5) = n .
	eq (r5 \in cenc2(nw(s))) = false .
	eq r1 = intruder .
	eq (m2(r3,intruder,intruder,r5) \in nw(s)) = true .
	eq (m1(intruder,intruder,intruder,enc1(intruder,n(intruder,intruder,r4),intruder)) \in nw(s)) = false .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	eq nonce2(r5) = n .
	eq (r5 \in cenc2(nw(s))) = false .
	eq r1 = intruder .
	eq (m2(r3,intruder,intruder,r5) \in nw(s)) = false .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true, use lm4 as a lemma
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	eq nonce2(r5) = n .
	eq (r5 \in cenc2(nw(s))) = false .
	eq (r1 = intruder) = false .
	red lm4(r5,m2(r3,intruder,r1,r5),nw(s)) implies inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	eq (nonce2(r5) = n) = false .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = false .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = false .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	eq (forwhom(n) = intruder) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (r2 = intruder) = false .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = false .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1,r2,r4)) = false .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = false .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv3(s,n) implies inv3(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op s : -> Sys .
	red inv4(init,e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq e1 = r3 .
	eq principal(r3) = intruder .
	eq (nonce(r3) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq e1 = r3 .
	eq principal(r3) = intruder .
	eq (nonce(r3) \in cnonce(nw(s))) = true .
	eq (key(r3) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq e1 = r3 .
	eq principal(r3) = intruder .
	eq (nonce(r3) \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq e1 = r3 .
	eq (principal(r3) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq (e1 = r3) = false .
	eq key(r3) = intruder .
	eq nonce(r3) = nonce(e1) .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq (e1 = r3) = false .
	eq key(r3) = intruder .
	eq (nonce(r3) = nonce(e1)) = false .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq (e1 = r3) = false .
	eq (key(r3) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq e1 = r3 .
	eq principal(r3) = intruder .
	eq (nonce(r3) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq e1 = r3 .
	eq principal(r3) = intruder .
	eq (nonce(r3) \in cnonce(nw(s))) = true .
	eq (key(r3) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq e1 = r3 .
	eq principal(r3) = intruder .
	eq (nonce(r3) \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq e1 = r3 .
	eq (principal(r3) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (e1 = r3) = false .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (principal(e1) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm11(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq nonce(e1) = r3 .
	red inv4(s,e1) implies inv4(fkm12(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (nonce(e1) = r3) = false .
	red inv4(s,e1) implies inv4(fkm12(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv4(s,e1) implies inv4(fkm12(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm12(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq r2 = intruder .
	red inv4(s,e1) implies inv4(fkm12(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	red inv4(s,e1) implies inv4(fkm12(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	eq e1 = enc1(r2,r3,r1) .
	red inv4(s,e1) implies inv4(fkm12(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	eq (e1 = enc1(r2,r3,r1)) = false .
	red inv4(s,e1) implies inv4(fkm12(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (principal(e1) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm12(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm12(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	eq nonce1(r3) = nonce(e1) .
	red inv4(s,e1) implies inv4(fkm21(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	eq (nonce1(r3) = nonce(e1)) = false .
	eq nonce2(r3) = nonce(e1) .
	red inv4(s,e1) implies inv4(fkm21(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	eq (nonce1(r3) = nonce(e1)) = false .
	eq (nonce2(r3) = nonce(e1)) = false .
	red inv4(s,e1) implies inv4(fkm21(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq (key(r3) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm21(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm21(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm21(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (principal(e1) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm21(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm21(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq nonce(e1) = r3 .
	red inv4(s,e1) implies inv4(fkm22(s,r1,r2,r3,r4),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (nonce(e1) = r3) = false .
	eq nonce(e1) = r4 .
	red inv4(s,e1) implies inv4(fkm22(s,r1,r2,r3,r4),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (nonce(e1) = r3) = false .
	eq (nonce(e1) = r4) = false .
	red inv4(s,e1) implies inv4(fkm22(s,r1,r2,r3,r4),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv4(s,e1) implies inv4(fkm22(s,r1,r2,r3,r4),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm22(s,r1,r2,r3,r4),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm22(s,r1,r2,r3,r4),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (principal(e1) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm22(s,r1,r2,r3,r4),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm22(s,r1,r2,r3,r4),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm22(s,r1,r2,r3,r4),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	eq nonce(r3) = nonce(e1) .
	red inv4(s,e1) implies inv4(fkm31(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	eq (nonce(r3) = nonce(e1)) = false .
	red inv4(s,e1) implies inv4(fkm31(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq (key(r3) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm31(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm31(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm31(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (principal(e1) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm31(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm31(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq nonce(e1) = r3 .
	red inv4(s,e1) implies inv4(fkm32(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (nonce(e1) = r3) = false .
	red inv4(s,e1) implies inv4(fkm32(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv4(s,e1) implies inv4(fkm32(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm32(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm32(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (principal(e1) = intruder) = false .
	red inv4(s,e1) implies inv4(fkm32(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(fkm32(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq nonce(e1) = n(r1,intruder,r3) .
	red inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (nonce(e1) = n(r1,intruder,r3)) = false .
	red inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq r2 = intruder .
	red inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	red inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	eq e1 = enc1(r2,n(r1,r2,r3),r1) .
	eq r1 = intruder .
	eq (n(intruder,r2,r3) \in cnonce(nw(s))) = true .
	red inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	eq e1 = enc1(r2,n(r1,r2,r3),r1) .
	eq r1 = intruder .
	eq (n(intruder,r2,r3) \in cnonce(nw(s))) = false .
	eq (enc1(r2,n(intruder,r2,r3),intruder) \in cenc1(nw(s))) = true .
	red inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true, use inv6 as a lemma
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	eq e1 = enc1(r2,n(r1,r2,r3),r1) .
	eq r1 = intruder .
	eq (n(intruder,r2,r3) \in cnonce(nw(s))) = false .
	eq (enc1(r2,n(intruder,r2,r3),intruder) \in cenc1(nw(s))) = false .
	red inv6(s,n(intruder,r2,r3)) implies inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	eq e1 = enc1(r2,n(r1,r2,r3),r1) .
	eq (r1 = intruder) = false .
	red inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	eq (e1 = enc1(r2,n(r1,r2,r3),r1)) = false .
	red inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (principal(e1) = intruder) = false .
	red inv4(s,e1) implies inv4(sdm1(s,r1,r2,r3),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv4(s,e1) implies inv4(sdm2(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq nonce(r5) = nonce(e1) .
	red inv4(s,e1) implies inv4(sdm2(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq (nonce(r5) = nonce(e1)) = false .
	eq nonce(e1) = n(r4,intruder,r1) .
	red inv4(s,e1) implies inv4(sdm2(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq (nonce(r5) = nonce(e1)) = false .
	eq (nonce(e1) = n(r4,intruder,r1)) = false .
	red inv4(s,e1) implies inv4(sdm2(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = false .
	red inv4(s,e1) implies inv4(sdm2(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv4(s,e1) implies inv4(sdm2(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(sdm2(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	red inv4(s,e1) implies inv4(sdm2(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (principal(e1) = intruder) = false .
	red inv4(s,e1) implies inv4(sdm2(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = false .
	red inv4(s,e1) implies inv4(sdm2(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv4(s,e1) implies inv4(sdm2(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv4(s,e1) implies inv4(sdm2(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	eq nonce2(r5) = nonce(e1) .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	eq (nonce2(r5) = nonce(e1)) = false .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = false .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = false .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = true .
	eq (nonce(e1) \in cnonce(nw(s))) = false .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e1) = intruder .
	eq (e1 \in cenc1(nw(s))) = false .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (principal(e1) = intruder) = false .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = false .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1,r2,r4)) = false .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = false .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv4(s,e1) implies inv4(sdm3(s,r1,r2,r3,r4,r5),e1) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op s : -> Sys .
	red inv5(init,e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	eq nonce(r3) = nonce2(e2) .
	red inv5(s,e2) implies inv5(fkm11(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	eq (nonce(r3) = nonce2(e2)) = false .
	red inv5(s,e2) implies inv5(fkm11(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq (key(r3) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm11(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm11(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm11(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (principal(e2) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm11(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm11(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq nonce2(e2) = r3 .
	red inv5(s,e2) implies inv5(fkm12(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (nonce2(e2) = r3) = false .
	red inv5(s,e2) implies inv5(fkm12(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv5(s,e2) implies inv5(fkm12(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm12(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm12(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (principal(e2) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm12(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm12(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq e2 = r3 .
	eq principal(r3) = intruder .
	eq (nonce2(r3) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq e2 = r3 .
	eq principal(r3) = intruder .
	eq (nonce2(r3) \in cnonce(nw(s))) = true .
	eq (key(r3) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq e2 = r3 .
	eq principal(r3) = intruder .
	eq (nonce2(r3) \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq e2 = r3 .
	eq (principal(r3) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq (e2 = r3) = false .
	eq key(r3) = intruder .
	eq nonce1(r3) = nonce2(e2) .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq (e2 = r3) = false .
	eq key(r3) = intruder .
	eq (nonce1(r3) = nonce2(e2)) = false .
	eq nonce2(r3) = nonce2(e2) .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq (e2 = r3) = false .
	eq key(r3) = intruder .
	eq (nonce1(r3) = nonce2(e2)) = false .
	eq (nonce2(r3) = nonce2(e2)) = false .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq (e2 = r3) = false .
	eq (key(r3) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq e2 = r3 .
	eq principal(r3) = intruder .
	eq (nonce2(r3) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq e2 = r3 .
	eq principal(r3) = intruder .
	eq (nonce2(r3) \in cnonce(nw(s))) = true .
	eq (key(r3) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq e2 = r3 .
	eq principal(r3) = intruder .
	eq (nonce2(r3) \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq e2 = r3 .
	eq (principal(r3) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (e2 = r3) = false .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (principal(e2) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm21(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq nonce2(e2) = r3 .
	red inv5(s,e2) implies inv5(fkm22(s,r1,r2,r3,r4),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (nonce2(e2) = r3) = false .
	eq nonce2(e2) = r4 .
	red inv5(s,e2) implies inv5(fkm22(s,r1,r2,r3,r4),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (nonce2(e2) = r3) = false .
	eq (nonce2(e2) = r4) = false .
	red inv5(s,e2) implies inv5(fkm22(s,r1,r2,r3,r4),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv5(s,e2) implies inv5(fkm22(s,r1,r2,r3,r4),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm22(s,r1,r2,r3,r4),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq r2 = intruder .
	red inv5(s,e2) implies inv5(fkm22(s,r1,r2,r3,r4),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	red inv5(s,e2) implies inv5(fkm22(s,r1,r2,r3,r4),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	eq e2 = enc2(r2,r3,r4,r1) .
	red inv5(s,e2) implies inv5(fkm22(s,r1,r2,r3,r4),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	eq (e2 = enc2(r2,r3,r4,r1)) = false .
	red inv5(s,e2) implies inv5(fkm22(s,r1,r2,r3,r4),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (principal(e2) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm22(s,r1,r2,r3,r4),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm22(s,r1,r2,r3,r4),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm22(s,r1,r2,r3,r4),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	eq nonce(r3) = nonce2(e2) .
	red inv5(s,e2) implies inv5(fkm31(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq key(r3) = intruder .
	eq (nonce(r3) = nonce2(e2)) = false .
	red inv5(s,e2) implies inv5(fkm31(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq (key(r3) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm31(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm31(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm31(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (principal(e2) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm31(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm31(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq nonce2(e2) = r3 .
	red inv5(s,e2) implies inv5(fkm32(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (nonce2(e2) = r3) = false .
	red inv5(s,e2) implies inv5(fkm32(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv5(s,e2) implies inv5(fkm32(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm32(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm32(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (principal(e2) = intruder) = false .
	red inv5(s,e2) implies inv5(fkm32(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(fkm32(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv5(s,e2) implies inv5(sdm1(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq nonce2(e2) = n(r1,intruder,r3) .
	red inv5(s,e2) implies inv5(sdm1(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (nonce2(e2) = n(r1,intruder,r3)) = false .
	red inv5(s,e2) implies inv5(sdm1(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv5(s,e2) implies inv5(sdm1(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(sdm1(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	red inv5(s,e2) implies inv5(sdm1(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (principal(e2) = intruder) = false .
	red inv5(s,e2) implies inv5(sdm1(s,r1,r2,r3),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq nonce(r5) = nonce2(e2) .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq (nonce(r5) = nonce2(e2)) = false .
	eq nonce2(e2) = n(r4,intruder,r1) .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq (nonce(r5) = nonce2(e2)) = false .
	eq (nonce2(e2) = n(r4,intruder,r1)) = false .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = false .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = false .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	eq e2 = enc2(r2,nonce(r5),n(r4,r2,r1),r4) .
	eq r4 = intruder .
	eq (m1(r3,r2,intruder,r5) \in nw(s)) = true .
	eq (n(intruder,r2,r1) \in cnonce(nw(s))) = true .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	eq e2 = enc2(r2,nonce(r5),n(r4,r2,r1),r4) .
	eq r4 = intruder .
	eq (m1(r3,r2,intruder,r5) \in nw(s)) = true .
	eq (n(intruder,r2,r1) \in cnonce(nw(s))) = false .
	eq (enc2(r2,nonce(r5),n(intruder,r2,r1),intruder) \in cenc2(nw(s))) = true .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true, use inv6 as a lemma
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	eq e2 = enc2(r2,nonce(r5),n(r4,r2,r1),r4) .
	eq r4 = intruder .
	eq (m1(r3,r2,intruder,r5) \in nw(s)) = true .
	eq (n(intruder,r2,r1) \in cnonce(nw(s))) = false .
	eq (enc2(r2,nonce(r5),n(intruder,r2,r1),intruder) \in cenc2(nw(s))) = false .
	red inv6(s,n(intruder,r2,r1)) implies inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	eq e2 = enc2(r2,nonce(r5),n(r4,r2,r1),r4) .
	eq r4 = intruder .
	eq (m1(r3,r2,intruder,r5) \in nw(s)) = false .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	eq e2 = enc2(r2,nonce(r5),n(r4,r2,r1),r4) .
	eq (r4 = intruder) = false .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (r2 = intruder) = false .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	eq (e2 = enc2(r2,nonce(r5),n(r4,r2,r1),r4)) = false .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (principal(e2) = intruder) = false .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = false .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv5(s,e2) implies inv5(sdm2(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	eq nonce2(r5) = nonce2(e2) .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	eq (nonce2(r5) = nonce2(e2)) = false .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = false .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = false .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = true .
	eq (nonce2(e2) \in cnonce(nw(s))) = false .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq principal(e2) = intruder .
	eq (e2 \in cenc2(nw(s))) = false .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (principal(e2) = intruder) = false .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = false .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1,r2,r4)) = false .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = false .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv5(s,e2) implies inv5(sdm3(s,r1,r2,r3,r4,r5),e2) .
close

--> true
open INV .
	op n : -> Nonce .
	op s : -> Sys .
	red inv6(init,n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq nonce(r3) = n .
	eq key(r3) = intruder .
	red inv6(s,n) implies inv6(fkm11(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq nonce(r3) = n .
	eq (key(r3) = intruder) = false .
	red inv6(s,n) implies inv6(fkm11(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (nonce(r3) = n) = false .
	red inv6(s,n) implies inv6(fkm11(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm11(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	red inv6(s,n) implies inv6(fkm11(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm11(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq n = r3 .
	eq creator(r3) = intruder .
	eq r2 = intruder .
	red inv6(s,n) implies inv6(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq n = r3 .
	eq creator(r3) = intruder .
	eq (r2 = intruder) = false .
	red inv6(s,n) implies inv6(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq n = r3 .
	eq (creator(r3) = intruder) = false .
	red inv6(s,n) implies inv6(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (n = r3) = false .
	red inv6(s,n) implies inv6(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	red inv6(s,n) implies inv6(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm12(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq nonce1(r3) = n .
	eq key(r3) = intruder .
	red inv6(s,n) implies inv6(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq nonce1(r3) = n .
	eq (key(r3) = intruder) = false .
	red inv6(s,n) implies inv6(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (nonce1(r3) = n) = false .
	eq nonce2(r3) = n .
	eq key(r3) = intruder .
	red inv6(s,n) implies inv6(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (nonce1(r3) = n) = false .
	eq nonce2(r3) = n .
	eq (key(r3) = intruder) = false .
	red inv6(s,n) implies inv6(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (nonce1(r3) = n) = false .
	eq (nonce2(r3) = n) = false .
	red inv6(s,n) implies inv6(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	red inv6(s,n) implies inv6(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm21(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq n = r3 .
	eq creator(r3) = intruder .
	eq r2 = intruder .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq n = r3 .
	eq creator(r3) = intruder .
	eq (r2 = intruder) = false .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq n = r3 .
	eq (creator(r3) = intruder) = false .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (n = r3) = false .
	eq n = r4 .
	eq creator(r4) = intruder .
	eq r3 = r4 .
	eq r2 = intruder .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (n = r3) = false .
	eq n = r4 .
	eq creator(r4) = intruder .
	eq r3 = r4 .
	eq (r2 = intruder) = false .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (n = r3) = false .
	eq n = r4 .
	eq creator(r4) = intruder .
	eq (r3 = r4) = false .
	eq r2 = intruder .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (n = r3) = false .
	eq n = r4 .
	eq creator(r4) = intruder .
	eq (r3 = r4) = false .
	eq (r2 = intruder) = false .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (n = r3) = false .
	eq n = r4 .
	eq (creator(r4) = intruder) = false .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (n = r3) = false .
	eq (n = r4) = false .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm22(s,r1,r2,r3,r4),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq nonce(r3) = n .
	eq key(r3) = intruder .
	red inv6(s,n) implies inv6(fkm31(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq nonce(r3) = n .
	eq (key(r3) = intruder) = false .
	red inv6(s,n) implies inv6(fkm31(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (nonce(r3) = n) = false .
	red inv6(s,n) implies inv6(fkm31(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm31(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	red inv6(s,n) implies inv6(fkm31(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm31(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq n = r3 .
	eq creator(r3) = intruder .
	eq r2 = intruder .
	red inv6(s,n) implies inv6(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq n = r3 .
	eq creator(r3) = intruder .
	eq (r2 = intruder) = false .
	red inv6(s,n) implies inv6(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq n = r3 .
	eq (creator(r3) = intruder) = false .
	red inv6(s,n) implies inv6(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (n = r3) = false .
	red inv6(s,n) implies inv6(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (creator(n) = intruder) = false .
	red inv6(s,n) implies inv6(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(fkm32(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv6(s,n) implies inv6(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq n = n(r1,intruder,r3) .
	red inv6(s,n) implies inv6(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (n = n(r1,intruder,r3)) = false .
	red inv6(s,n) implies inv6(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv6(s,n) implies inv6(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (creator(n) = intruder) = false .
	red inv6(s,n) implies inv6(sdm1(s,r1,r2,r3),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv6(s,n) implies inv6(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq nonce(r5) = n .
	red inv6(s,n) implies inv6(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq (nonce(r5) = n) = false .
	eq n = n(r4,intruder,r1) .
	red inv6(s,n) implies inv6(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = true .
	eq (nonce(r5) = n) = false .
	eq (n = n(r4,intruder,r1)) = false .
	red inv6(s,n) implies inv6(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m1(r3,intruder,r4,r5) \in nw(s)) = false .
	red inv6(s,n) implies inv6(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv6(s,n) implies inv6(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	red inv6(s,n) implies inv6(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3,r2,r4,r5) \in nw(s)) = false .
	red inv6(s,n) implies inv6(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv6(s,n) implies inv6(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv6(s,n) implies inv6(sdm2(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	eq nonce2(r5) = n .
	red inv6(s,n) implies inv6(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = true .
	eq (nonce2(r5) = n) = false .
	red inv6(s,n) implies inv6(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = true .
	eq (m1(r1,r1,intruder,enc1(intruder,n(r1,intruder,r4),r1)) \in nw(s)) = false .
	red inv6(s,n) implies inv6(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq r2 = intruder .
	eq (m2(r3,intruder,r1,r5) \in nw(s)) = false .
	red inv6(s,n) implies inv6(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = true .
	eq (r2 = intruder) = false .
	red inv6(s,n) implies inv6(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq creator(n) = intruder .
	eq (n \in cnonce(nw(s))) = false .
	red inv6(s,n) implies inv6(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = true .
	eq (creator(n) = intruder) = false .
	red inv6(s,n) implies inv6(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1,r2,r4) .
	eq (m1(r1,r1,r2,enc1(r2,n(r1,r2,r4),r1)) \in nw(s)) = false .
	red inv6(s,n) implies inv6(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1,r2,r4)) = false .
	red inv6(s,n) implies inv6(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3,r2,r1,r5) \in nw(s)) = false .
	red inv6(s,n) implies inv6(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv6(s,n) implies inv6(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> true
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv6(s,n) implies inv6(sdm3(s,r1,r2,r3,r4,r5),n) .
close

--> Time taken is 3724ms