--> true 
open INV .
	op e1 : -> Cipher1 .
	op s : -> Sys .
	red inv17(init, e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (e1 \in cenc1(nw(s))) = true .
	red inv17(s, e1) implies inv17(fkm11(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (random(nonce(e1)) \in ur(s)) = true .
	red inv17(s, e1) implies inv17(fkm11(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (random(nonce(e1)) \in ur(s)) = false .
	eq e1 = r3 .
	red inv17(s, e1) implies inv17(fkm11(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (random(nonce(e1)) \in ur(s)) = false .
	eq (e1 = r3) = false .
	red inv17(s, e1) implies inv17(fkm11(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv17(s, e1) implies inv17(fkm11(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (e1 \in cenc1(nw(s))) = true .
	red inv17(s, e1) implies inv17(fkm12(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (random(nonce(e1)) \in ur(s)) = true .
	red inv17(s, e1) implies inv17(fkm12(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (random(nonce(e1)) \in ur(s)) = false .
	eq r2 = intruder .
	red inv17(s, e1) implies inv17(fkm12(s, r1, r2, r3), e1) .
close

--> true, use inv18 as a lemma 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (random(nonce(e1)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq e1 = enc1(r2, r3, r1) .
	red inv18(s, r3) implies inv17(s, e1) implies inv17(fkm12(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (random(nonce(e1)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq (e1 = enc1(r2, r3, r1)) = false .
	red inv17(s, e1) implies inv17(fkm12(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv17(s, e1) implies inv17(fkm12(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	red inv17(s, e1) implies inv17(fkm21(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv17(s, e1) implies inv17(fkm21(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	red inv17(s, e1) implies inv17(fkm22(s, r1, r2, r3, r4), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv17(s, e1) implies inv17(fkm22(s, r1, r2, r3, r4), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv17(s, e1) implies inv17(fkm22(s, r1, r2, r3, r4), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	red inv17(s, e1) implies inv17(fkm31(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv17(s, e1) implies inv17(fkm31(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv17(s, e1) implies inv17(fkm32(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv17(s, e1) implies inv17(fkm32(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv17(s, e1) implies inv17(sdm1(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq random(nonce(e1)) = r3 .
	red inv17(s, e1) implies inv17(sdm1(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (random(nonce(e1)) = r3) = false .
	eq (e1 \in cenc1(nw(s))) = true .
	red inv17(s, e1) implies inv17(sdm1(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (random(nonce(e1)) = r3) = false .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (random(nonce(e1)) \in ur(s)) = true .
	red inv17(s, e1) implies inv17(sdm1(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (random(nonce(e1)) = r3) = false .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (random(nonce(e1)) \in ur(s)) = false .
	eq r2 = intruder .
	red inv17(s, e1) implies inv17(sdm1(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (random(nonce(e1)) = r3) = false .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (random(nonce(e1)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq e1 = enc1(r2, n(r1, r2, r3), r1) .
	red inv17(s, e1) implies inv17(sdm1(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (random(nonce(e1)) = r3) = false .
	eq (e1 \in cenc1(nw(s))) = false .
	eq (random(nonce(e1)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq (e1 = enc1(r2, n(r1, r2, r3), r1)) = false .
	red inv17(s, e1) implies inv17(sdm1(s, r1, r2, r3), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv17(s, e1) implies inv17(sdm2(s, r1, r2, r3, r4, r5), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	red inv17(s, e1) implies inv17(sdm2(s, r1, r2, r3, r4, r5), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = false .
	red inv17(s, e1) implies inv17(sdm2(s, r1, r2, r3, r4, r5), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv17(s, e1) implies inv17(sdm2(s, r1, r2, r3, r4, r5), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv17(s, e1) implies inv17(sdm2(s, r1, r2, r3, r4, r5), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	red inv17(s, e1) implies inv17(sdm3(s, r1, r2, r3, r4, r5), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = false .
	red inv17(s, e1) implies inv17(sdm3(s, r1, r2, r3, r4, r5), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1, r2, r4)) = false .
	red inv17(s, e1) implies inv17(sdm3(s, r1, r2, r3, r4, r5), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = false .
	red inv17(s, e1) implies inv17(sdm3(s, r1, r2, r3, r4, r5), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv17(s, e1) implies inv17(sdm3(s, r1, r2, r3, r4, r5), e1) .
close

--> true 
open INV .
	op e1 : -> Cipher1 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv17(s, e1) implies inv17(sdm3(s, r1, r2, r3, r4, r5), e1) .
close

--> true, use inv18 as a lemma 
open INV .
	op n : -> Nonce .
	op s : -> Sys .
	red inv18(init, n) implies inv18(init, n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = true .
	red inv18(s, n) implies inv18(fkm11(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = true .
	red inv18(s, n) implies inv18(fkm11(s, r1, r2, r3), n) .
close

--> true, use inv17 as a lemma 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq nonce(r3) = n .
	red inv17(s, r3) implies inv18(s, n) implies inv18(fkm11(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq (nonce(r3) = n) = false .
	red inv18(s, n) implies inv18(fkm11(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv18(s, n) implies inv18(fkm11(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = true .
	red inv18(s, n) implies inv18(fkm12(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = true .
	red inv18(s, n) implies inv18(fkm12(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq n = r3 .
	red inv18(s, n) implies inv18(fkm12(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq (n = r3) = false .
	red inv18(s, n) implies inv18(fkm12(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv18(s, n) implies inv18(fkm12(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = true .
	red inv18(s, n) implies inv18(fkm21(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = true .
	red inv18(s, n) implies inv18(fkm21(s, r1, r2, r3), n) .
close

--> true, use inv19 as a lemma 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq nonce1(r3) = n .
	red inv19(s, r3) implies inv18(s, n) implies inv18(fkm21(s, r1, r2, r3), n) .
close

--> true, use inv19 as a lemma 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq (nonce1(r3) = n) = false .
	eq nonce2(r3) = n .
	red inv19(s, r3) implies inv18(s, n) implies inv18(fkm21(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq (nonce1(r3) = n) = false .
	eq (nonce2(r3) = n) = false .
	red inv18(s, n) implies inv18(fkm21(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv18(s, n) implies inv18(fkm21(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = true .
	red inv18(s, n) implies inv18(fkm22(s, r1, r2, r3, r4), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = true .
	red inv18(s, n) implies inv18(fkm22(s, r1, r2, r3, r4), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq n = r3 .
	red inv18(s, n) implies inv18(fkm22(s, r1, r2, r3, r4), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq (n = r3) = false .
	eq n = r4 .
	red inv18(s, n) implies inv18(fkm22(s, r1, r2, r3, r4), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq (n = r3) = false .
	eq (n = r4) = false .
	red inv18(s, n) implies inv18(fkm22(s, r1, r2, r3, r4), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv18(s, n) implies inv18(fkm22(s, r1, r2, r3, r4), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv18(s, n) implies inv18(fkm22(s, r1, r2, r3, r4), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = true .
	red inv18(s, n) implies inv18(fkm31(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = true .
	red inv18(s, n) implies inv18(fkm31(s, r1, r2, r3), n) .
close

--> true, use inv20 as a lemma 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq nonce(r3) = n .
	red inv20(s, r3) implies inv18(s, n) implies inv18(fkm31(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq (nonce(r3) = n) = false .
	red inv18(s, n) implies inv18(fkm31(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv18(s, n) implies inv18(fkm31(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = true .
	red inv18(s, n) implies inv18(fkm32(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = true .
	red inv18(s, n) implies inv18(fkm32(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq n = r3 .
	red inv18(s, n) implies inv18(fkm32(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq (n = r3) = false .
	red inv18(s, n) implies inv18(fkm32(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv18(s, n) implies inv18(fkm32(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv18(s, n) implies inv18(sdm1(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq random(n) = r3 .
	red inv18(s, n) implies inv18(sdm1(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (random(n) = r3) = false .
	eq (n \in cnonce(nw(s))) = true .
	red inv18(s, n) implies inv18(sdm1(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (random(n) = r3) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = true .
	red inv18(s, n) implies inv18(sdm1(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (random(n) = r3) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq r2 = intruder .
	eq n = n(r1, intruder, r3) .
	red inv18(s, n) implies inv18(sdm1(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (random(n) = r3) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq r2 = intruder .
	eq (n = n(r1, intruder, r3)) = false .
	red inv18(s, n) implies inv18(sdm1(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (random(n) = r3) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	red inv18(s, n) implies inv18(sdm1(s, r1, r2, r3), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv18(s, n) implies inv18(sdm2(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq random(n) = r1 .
	red inv18(s, n) implies inv18(sdm2(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(n) = r1) = false .
	eq (n \in cnonce(nw(s))) = true .
	red inv18(s, n) implies inv18(sdm2(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(n) = r1) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = true .
	red inv18(s, n) implies inv18(sdm2(s, r1, r2, r3, r4, r5), n) .
close

--> true, use inv10 as a lemma 
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(n) = r1) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = true .
	eq nonce(r5) = n .
	red inv10(s, m1(r3, intruder, r4, r5)) implies inv18(s, n) implies inv18(sdm2(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(n) = r1) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = true .
	eq (nonce(r5) = n) = false .
	eq n = n(r4, intruder, r1) .
	red inv18(s, n) implies inv18(sdm2(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(n) = r1) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = true .
	eq (nonce(r5) = n) = false .
	eq (n = n(r4, intruder, r1)) = false .
	red inv18(s, n) implies inv18(sdm2(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(n) = r1) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = false .
	red inv18(s, n) implies inv18(sdm2(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(n) = r1) = false .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	red inv18(s, n) implies inv18(sdm2(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = false .
	red inv18(s, n) implies inv18(sdm2(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv18(s, n) implies inv18(sdm2(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv18(s, n) implies inv18(sdm2(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (n \in cnonce(nw(s))) = true .
	red inv18(s, n) implies inv18(sdm3(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = true .
	red inv18(s, n) implies inv18(sdm3(s, r1, r2, r3, r4, r5), n) .
close

--> true, use inv9 as a lemma 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m2(r3, intruder, r1, r5) \in nw(s)) = true .
	eq (m1(r1, r1, intruder, enc1(intruder, n(r1, intruder, r4), r1)) \in nw(s)) = true .
	eq nonce2(r5) = n .
	red inv9(s, m2(r3, intruder, r1, r5)) implies inv18(s, n) implies inv18(sdm3(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m2(r3, intruder, r1, r5) \in nw(s)) = true .
	eq (m1(r1, r1, intruder, enc1(intruder, n(r1, intruder, r4), r1)) \in nw(s)) = true .
	eq (nonce2(r5) = n) = false .
	red inv18(s, n) implies inv18(sdm3(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m2(r3, intruder, r1, r5) \in nw(s)) = true .
	eq (m1(r1, r1, intruder, enc1(intruder, n(r1, intruder, r4), r1)) \in nw(s)) = false .
	red inv18(s, n) implies inv18(sdm3(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m2(r3, intruder, r1, r5) \in nw(s)) = false .
	red inv18(s, n) implies inv18(sdm3(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (n \in cnonce(nw(s))) = false .
	eq (random(n) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	red inv18(s, n) implies inv18(sdm3(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = false .
	red inv18(s, n) implies inv18(sdm3(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1, r2, r4)) = false .
	red inv18(s, n) implies inv18(sdm3(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = false .
	red inv18(s, n) implies inv18(sdm3(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv18(s, n) implies inv18(sdm3(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op n : -> Nonce .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv18(s, n) implies inv18(sdm3(s, r1, r2, r3, r4, r5), n) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op s : -> Sys .
	red inv19(init, e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	red inv19(s, e2) implies inv19(fkm11(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv19(s, e2) implies inv19(fkm11(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv19(s, e2) implies inv19(fkm12(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv19(s, e2) implies inv19(fkm12(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = true .
	red inv19(s, e2) implies inv19(fkm21(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = true .
	red inv19(s, e2) implies inv19(fkm21(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq e2 = r3 .
	red inv19(s, e2) implies inv19(fkm21(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq (e2 = r3) = false .
	red inv19(s, e2) implies inv19(fkm21(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq e2 = r3 .
	red inv19(s, e2) implies inv19(fkm21(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq (e2 = r3) = false .
	red inv19(s, e2) implies inv19(fkm21(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv19(s, e2) implies inv19(fkm21(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = true .
	red inv19(s, e2) implies inv19(fkm22(s, r1, r2, r3, r4), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = true .
	red inv19(s, e2) implies inv19(fkm22(s, r1, r2, r3, r4), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq r2 = intruder .
	red inv19(s, e2) implies inv19(fkm22(s, r1, r2, r3, r4), e2) .
close

--> true, use inv18 as a lemma 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, r3, r4, r1) .
	eq (random(r3) \in ur(s)) = true .
	red inv18(s, r4) implies inv19(s, e2) implies inv19(fkm22(s, r1, r2, r3, r4), e2) .
close

--> true, use inv18 as a lemma 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, r3, r4, r1) .
	eq (random(r3) \in ur(s)) = false .
	red inv18(s, r3) implies inv19(s, e2) implies inv19(fkm22(s, r1, r2, r3, r4), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq (e2 = enc2(r2, r3, r4, r1)) = false .
	red inv19(s, e2) implies inv19(fkm22(s, r1, r2, r3, r4), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq r2 = intruder .
	red inv19(s, e2) implies inv19(fkm22(s, r1, r2, r3, r4), e2) .
close

--> true, use inv18 as a lemma 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, r3, r4, r1) .
	eq (random(r3) \in ur(s)) = true .
	red inv18(s, r4) implies inv19(s, e2) implies inv19(fkm22(s, r1, r2, r3, r4), e2) .
close

--> true, use inv18 as a lemma 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, r3, r4, r1) .
	eq (random(r3) \in ur(s)) = false .
	red inv18(s, r3) implies inv19(s, e2) implies inv19(fkm22(s, r1, r2, r3, r4), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq (e2 = enc2(r2, r3, r4, r1)) = false .
	red inv19(s, e2) implies inv19(fkm22(s, r1, r2, r3, r4), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv19(s, e2) implies inv19(fkm22(s, r1, r2, r3, r4), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv19(s, e2) implies inv19(fkm22(s, r1, r2, r3, r4), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	red inv19(s, e2) implies inv19(fkm31(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv19(s, e2) implies inv19(fkm31(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv19(s, e2) implies inv19(fkm32(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv19(s, e2) implies inv19(fkm32(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv19(s, e2) implies inv19(sdm1(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	red inv19(s, e2) implies inv19(sdm1(s, r1, r2, r3), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq random(nonce2(e2)) = r1 .
	eq random(nonce1(e2)) = r1 .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq random(nonce2(e2)) = r1 .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = true .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq random(nonce2(e2)) = r1 .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq random(nonce2(e2)) = r1 .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = true .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq random(nonce2(e2)) = r1 .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = false .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true, use inv10 as a lemma 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq random(nonce2(e2)) = r1 .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4) .
	red inv10(s, m1(r3, r2, r4, r5)) implies inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq random(nonce2(e2)) = r1 .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq (e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4)) = false .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq random(nonce1(e2)) = r1 .
	eq (e2 \in cenc2(nw(s))) = true .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq random(nonce1(e2)) = r1 .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce2(e2)) \in ur(s)) = true .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq random(nonce1(e2)) = r1 .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = true .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq random(nonce1(e2)) = r1 .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = false .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true, use inv10 as a lemma 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq random(nonce1(e2)) = r1 .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4) .
	red inv10(s, m1(r3, r2, r4, r5)) implies inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq random(nonce1(e2)) = r1 .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq (e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4)) = false .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = true .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = true .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = true .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = false .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true, use inv10 as a lemma 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4) .
	red inv10(s, m1(r3, r2, r4, r5)) implies inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = true .
	eq (random(nonce2(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq (e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4)) = false .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = true .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m1(r3, intruder, r4, r5) \in nw(s)) = false .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true, use inv10 as a lemma 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4) .
	red inv10(s, m1(r3, r2, r4, r5)) implies inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	eq (random(nonce2(e2)) = r1) = false .
	eq (random(nonce1(e2)) = r1) = false .
	eq (e2 \in cenc2(nw(s))) = false .
	eq (random(nonce1(e2)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq (e2 = enc2(r2, nonce(r5), n(r4, r2, r1), r4)) = false .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = false .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv19(s, e2) implies inv19(sdm2(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	red inv19(s, e2) implies inv19(sdm3(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = false .
	red inv19(s, e2) implies inv19(sdm3(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1, r2, r4)) = false .
	red inv19(s, e2) implies inv19(sdm3(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = false .
	red inv19(s, e2) implies inv19(sdm3(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv19(s, e2) implies inv19(sdm3(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e2 : -> Cipher2 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv19(s, e2) implies inv19(sdm3(s, r1, r2, r3, r4, r5), e2) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op s : -> Sys .
	red inv20(init, e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = true .
	red inv20(s, e3) implies inv20(fkm11(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher1 .
	op s : -> Sys .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv20(s, e3) implies inv20(fkm11(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv20(s, e3) implies inv20(fkm12(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv20(s, e3) implies inv20(fkm12(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = true .
	red inv20(s, e3) implies inv20(fkm21(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher2 .
	op s : -> Sys .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv20(s, e3) implies inv20(fkm21(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
	red inv20(s, e3) implies inv20(fkm22(s, r1, r2, r3, r4), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv20(s, e3) implies inv20(fkm22(s, r1, r2, r3, r4), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv20(s, e3) implies inv20(fkm22(s, r1, r2, r3, r4), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (e3 \in cenc3(nw(s))) = true .
	red inv20(s, e3) implies inv20(fkm31(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = true .
	red inv20(s, e3) implies inv20(fkm31(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = false .
	eq e3 = r3 .
	red inv20(s, e3) implies inv20(fkm31(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = false .
	eq (e3 = r3) = false .
	red inv20(s, e3) implies inv20(fkm31(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher3 .
	op s : -> Sys .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv20(s, e3) implies inv20(fkm31(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (e3 \in cenc3(nw(s))) = true .
	red inv20(s, e3) implies inv20(fkm32(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = true .
	red inv20(s, e3) implies inv20(fkm32(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = false .
	eq r2 = intruder .
	red inv20(s, e3) implies inv20(fkm32(s, r1, r2, r3), e3) .
close

--> true, use inv18 as a lemma 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq e3 = enc3(r2, r3) .
	red inv18(s, r3) implies inv20(s, e3) implies inv20(fkm32(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq (e3 = enc3(r2, r3)) = false .
	red inv20(s, e3) implies inv20(fkm32(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Nonce .
	op s : -> Sys .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv20(s, e3) implies inv20(fkm32(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv20(s, e3) implies inv20(sdm1(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	red inv20(s, e3) implies inv20(sdm1(s, r1, r2, r3), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = true .
	red inv20(s, e3) implies inv20(sdm2(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = true .
	red inv20(s, e3) implies inv20(sdm2(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq key(r5) = r4 .
	eq (r1 \in ur(s)) = false .
	eq (m1(r3, r2, r4, r5) \in nw(s)) = false .
	red inv20(s, e3) implies inv20(sdm2(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq principal(r5) = r2 .
	eq (key(r5) = r4) = false .
	red inv20(s, e3) implies inv20(sdm2(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Cipher1 .
	op s : -> Sys .
	eq (principal(r5) = r2) = false .
	red inv20(s, e3) implies inv20(sdm2(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (e3 \in cenc3(nw(s))) = true .
	red inv20(s, e3) implies inv20(sdm3(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = true .
	red inv20(s, e3) implies inv20(sdm3(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m2(r3, intruder, r1, r5) \in nw(s)) = true .
	eq (m1(r1, r1, intruder, enc1(intruder, n(r1, intruder, r4), r1)) \in nw(s)) = true .
	red inv20(s, e3) implies inv20(sdm3(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m2(r3, intruder, r1, r5) \in nw(s)) = true .
	eq (m1(r1, r1, intruder, enc1(intruder, n(r1, intruder, r4), r1)) \in nw(s)) = false .
	red inv20(s, e3) implies inv20(sdm3(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = false .
	eq r2 = intruder .
	eq (m2(r3, intruder, r1, r5) \in nw(s)) = false .
	red inv20(s, e3) implies inv20(sdm3(s, r1, r2, r3, r4, r5), e3) .
close

--> true, use inv9 as a lemma 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq e3 = enc3(r2, nonce2(r5)) .
	red inv9(s, m2(r3, r2, r1, r5)) implies inv20(s, e3) implies inv20(sdm3(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = true .
	eq (e3 \in cenc3(nw(s))) = false .
	eq (random(nonce(e3)) \in ur(s)) = false .
	eq (r2 = intruder) = false .
	eq (e3 = enc3(r2, nonce2(r5))) = false .
	red inv20(s, e3) implies inv20(sdm3(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq nonce1(r5) = n(r1, r2, r4) .
	eq (m1(r1, r1, r2, enc1(r2, n(r1, r2, r4), r1)) \in nw(s)) = false .
	red inv20(s, e3) implies inv20(sdm3(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = true .
	eq (nonce1(r5) = n(r1, r2, r4)) = false .
	red inv20(s, e3) implies inv20(sdm3(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq principal(r5) = r2 .
	eq (m2(r3, r2, r1, r5) \in nw(s)) = false .
	red inv20(s, e3) implies inv20(sdm3(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq key(r5) = r1 .
	eq (principal(r5) = r2) = false .
	red inv20(s, e3) implies inv20(sdm3(s, r1, r2, r3, r4, r5), e3) .
close

--> true 
open INV .
	op e3 : -> Cipher3 .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Cipher2 .
	op s : -> Sys .
	eq (key(r5) = r1) = false .
	red inv20(s, e3) implies inv20(sdm3(s, r1, r2, r3, r4, r5), e3) .
close

--> Time taken is 2937ms