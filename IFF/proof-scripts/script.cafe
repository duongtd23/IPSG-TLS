
:goal{
eq [iff1 :nonexec] : inv1(F:Field, A:Agent, A1:Agent, A0:Agent, K:Key, R:Rand)  = true .
 eq [iff :nonexec] : inv2(F:Field, K:Key, R:Rand)  = true .
}
:ind on (F:Field)
:apply(si)
:sel(1)
	:apply(tc)

	:def csb1#1 = :ctf [R#Rand \in rands(nw(F#Field))  .]

	:apply(csb1#1)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb2#1 = :ctf [R#Rand \in rands(nw(F#Field))  .]

	:apply(csb2#1)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)


:sel(2)
	:apply(tc)

	:def csb1#2 = :ctf [C#Cipher \in ciphers(nw(F#Field))  .]

	:apply(csb1#2)

	:def csb2#2 = :ctf {eq A1@Agent  = enemy .}

	:apply(csb2#2)

	:def csb3#2 = :ctf {eq p(K@Key)  = enemy .}

	:apply(csb3#2)

	:def csb4#2 = :ctf {eq k(enemy)  = K@Key .}

	:apply(csb4#2)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb5#2 = :ctf [rm(A@Agent, enemy, A0@Agent, enc(K@Key, R@Rand, enemy)) \in nw(F#Field)  .]

	:apply(csb5#2)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb6#2 = :ctf {eq A@Agent  = enemy .}

	:apply(csb6#2)

	:def csb7#2 = :ctf [rm(enemy, enemy, A0@Agent, enc(K@Key, R@Rand, enemy)) \in nw(F#Field)  .]

	:apply(csb7#2)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb8#2 = :ctf {eq A0#Agent  = A0@Agent .}

	:apply(csb8#2)

	:def csb9#2 = :ctf {eq A#Agent  = enemy .}

	:apply(csb9#2)

	:def csb10#2 = :ctf {eq enc(K@Key, R@Rand, enemy)  = C#Cipher .}

	:apply(csb10#2)

	:def csb11#2 = :ctf [rm(enemy, enemy, A0@Agent, C#Cipher) \in nw(F#Field)  .]

	:apply(csb11#2)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb12#2 = :ctf [rm(A@Agent, enemy, A0@Agent, enc(K@Key, R@Rand, enemy)) \in nw(F#Field)  .]

	:apply(csb12#2)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb13#2 = :ctf {eq A@Agent  = enemy .}

	:apply(csb13#2)

	:def csb14#2 = :ctf [rm(enemy, enemy, A0@Agent, enc(K@Key, R@Rand, enemy)) \in nw(F#Field)  .]

	:apply(csb14#2)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb15#2 = :ctf {eq A0#Agent  = A0@Agent .}

	:apply(csb15#2)

	:def csb16#2 = :ctf {eq A#Agent  = enemy .}

	:apply(csb16#2)

	:def csb17#2 = :ctf {eq enc(K@Key, R@Rand, enemy)  = C#Cipher .}

	:apply(csb17#2)

	:def csb18#2 = :ctf [rm(enemy, enemy, A0@Agent, C#Cipher) \in nw(F#Field)  .]

	:apply(csb18#2)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb19#2 = :ctf [C#Cipher \in ciphers(nw(F#Field))  .]

	:apply(csb19#2)

	:def csb20#2 = :ctf {eq p(K@Key)  = enemy .}

	:apply(csb20#2)

	:def csb21#2 = :ctf {eq k(enemy)  = K@Key .}

	:apply(csb21#2)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb22#2 = :ctf [enc(K@Key, R@Rand, enemy) \in ciphers(nw(F#Field))  .]

	:apply(csb22#2)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb23#2 = :ctf {eq enc(K@Key, R@Rand, enemy)  = C#Cipher .}

	:apply(csb23#2)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb24#2 = :ctf [enc(K@Key, R@Rand, enemy) \in ciphers(nw(F#Field))  .]

	:apply(csb24#2)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb25#2 = :ctf {eq enc(K@Key, R@Rand, enemy)  = C#Cipher .}

	:apply(csb25#2)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)


:sel(3)
	:apply(tc)

	:def csb1#3 = :ctf [R#Rand \in rands(nw(F#Field))  .]

	:apply(csb1#3)

	:def csb2#3 = :ctf {eq A1@Agent  = enemy .}

	:apply(csb2#3)

	:def csb3#3 = :ctf {eq p(K@Key)  = enemy .}

	:apply(csb3#3)

	:def csb4#3 = :ctf {eq k(enemy)  = K@Key .}

	:apply(csb4#3)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb5#3 = :ctf [R#Rand \in rands(nw(F#Field))  .]

	:apply(csb5#3)

	:def csb6#3 = :ctf {eq p(K@Key)  = enemy .}

	:apply(csb6#3)

	:def csb7#3 = :ctf {eq k(enemy)  = K@Key .}

	:apply(csb7#3)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)


:sel(4)
	:apply(tc)

	:apply (rd)

	:apply (rd)


:sel(5)
	:apply(tc)

	:def csb1#5 = :ctf [R#Rand \in ur(F#Field)  .]

	:apply(csb1#5)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb2#5 = :ctf [R#Rand \in ur(F#Field)  .]

	:apply(csb2#5)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)


:sel(6)
	:apply(tc)

	:def csb1#6 = :ctf {eq dst(M#Msg)  = A#Agent .}

	:apply(csb1#6)

	:def csb2#6 = :ctf [cm?(M#Msg)  .]

	:apply(csb2#6)

	:def csb3#6 = :ctf [M#Msg \in nw(F#Field)  .]

	:apply(csb3#6)

	:def csb4#6 = :ctf {eq A1@Agent  = enemy .}

	:apply(csb4#6)

	:def csb5#6 = :ctf {eq p(K@Key)  = enemy .}

	:apply(csb5#6)

	:def csb6#6 = :ctf {eq k(enemy)  = K@Key .}

	:apply(csb6#6)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb7#6 = :ctf [rm(A@Agent, enemy, A0@Agent, enc(K@Key, R@Rand, enemy)) \in nw(F#Field)  .]

	:apply(csb7#6)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb8#6 = :ctf {eq A@Agent  = A#Agent .}

	:apply(csb8#6)

	:def csb9#6 = :ctf [rm(A#Agent, enemy, A0@Agent, enc(K@Key, R@Rand, enemy)) \in nw(F#Field)  .]

	:apply(csb9#6)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb10#6 = :ctf {eq A#Agent  = enemy .}

	:apply(csb10#6)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb11#6 = :ctf [rm(A@Agent, enemy, A0@Agent, enc(K@Key, R@Rand, enemy)) \in nw(F#Field)  .]

	:apply(csb11#6)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb12#6 = :ctf {eq A@Agent  = A#Agent .}

	:apply(csb12#6)

	:def csb13#6 = :ctf [rm(A#Agent, enemy, A0@Agent, enc(K@Key, R@Rand, enemy)) \in nw(F#Field)  .]

	:apply(csb13#6)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb14#6 = :ctf {eq A#Agent  = enemy .}

	:apply(csb14#6)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff1]  by {A0:Agent <- A0@Agent ; A1:Agent <- A1@Agent ; A:Agent <- A@Agent ; K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb15#6 = :ctf {eq dst(M#Msg)  = A#Agent .}

	:apply(csb15#6)

	:def csb16#6 = :ctf [cm?(M#Msg)  .]

	:apply(csb16#6)

	:def csb17#6 = :ctf [M#Msg \in nw(F#Field)  .]

	:apply(csb17#6)

	:def csb18#6 = :ctf {eq p(K@Key)  = enemy .}

	:apply(csb18#6)

	:def csb19#6 = :ctf {eq k(enemy)  = K@Key .}

	:apply(csb19#6)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb20#6 = :ctf [enc(K@Key, R@Rand, enemy) \in ciphers(nw(F#Field))  .]

	:apply(csb20#6)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb21#6 = :ctf {eq A#Agent  = enemy .}

	:apply(csb21#6)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb22#6 = :ctf [enc(K@Key, R@Rand, enemy) \in ciphers(nw(F#Field))  .]

	:apply(csb22#6)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:def csb23#6 = :ctf {eq A#Agent  = enemy .}

	:apply(csb23#6)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

	:imp [iff]  by {K:Key <- K@Key ; R:Rand <- R@Rand ;}

	:apply (rd)

