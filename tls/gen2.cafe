--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op s : -> Sys .
	op sign : -> Sign .
	red inv2(init, b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = true .
	eq decH(r11, pubKey(r9)) = hParams(r4, r6, r10) .
	eq sign(r9) = sign(ca, owner(r9), pubKey(r9)) .
	red inv2(s, b, pke, sign) implies inv2(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = true .
	eq decH(r11, pubKey(r9)) = hParams(r4, r6, r10) .
	eq (sign(r9) = sign(ca, owner(r9), pubKey(r9))) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = true .
	eq (decH(r11, pubKey(r9)) = hParams(r4, r6, r10)) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r11, pubKey(r9)) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq ss(s, r2, r3, r5) = none .
	red inv2(s, b, pke, sign) implies inv2(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = true .
	eq (sh2M(r1, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = true .
	eq decFin(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = prf-sfin2(ms(ss(s, r2, r3, r5)), hAbbrHs(r2, r3, r4, r5, r6, r7, cs(ss(s, r2, r3, r5)))) .
	red inv2(s, b, pke, sign) implies inv2(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = true .
	eq (sh2M(r1, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = true .
	eq (decFin(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = prf-sfin2(ms(ss(s, r2, r3, r5)), hAbbrHs(r2, r3, r4, r5, r6, r7, cs(ss(s, r2, r3, r5))))) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = true .
	eq (sh2M(r1, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r3 \in ur(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(chello(s, r1, r2, r3, r4), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r3 \in ur(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(chello(s, r1, r2, r3, r4), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq ss(s, r1, r2, r4) = none .
	red inv2(s, b, pke, sign) implies inv2(chello2(s, r1, r2, r3, r4, r5), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r1, r2, r4) = none) = false .
	eq (r3 \in ur(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(chello2(s, r1, r2, r3, r4, r5), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r1, r2, r4) = none) = false .
	eq (r3 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r4)) \in r5) = true .
	red inv2(s, b, pke, sign) implies inv2(chello2(s, r1, r2, r3, r4, r5), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r1, r2, r4) = none) = false .
	eq (r3 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r4)) \in r5) = false .
	red inv2(s, b, pke, sign) implies inv2(chello2(s, r1, r2, r3, r4, r5), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq decH(r12, pubKey(r10)) = hParams(r5, r7, r11) .
	eq sign(r10) = sign(ca, owner(r10), pubKey(r10)) .
	red inv2(s, b, pke, sign) implies inv2(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq decH(r12, pubKey(r10)) = hParams(r5, r7, r11) .
	eq (sign(r10) = sign(ca, owner(r10), pubKey(r10))) = false .
	red inv2(s, b, pke, sign) implies inv2(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq (decH(r12, pubKey(r10)) = hParams(r5, r7, r11)) = false .
	red inv2(s, b, pke, sign) implies inv2(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq decAsym?(r12, pubKey(r10)) = false .
	red inv2(s, b, pke, sign) implies inv2(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r4 \in csign(nw(s))) = true .
	eq b = intruder .
	red inv2(s, b, pke, sign) implies inv2(fkCert(s, r1, r2, r3, r4), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r4 \in csign(nw(s))) = true .
	eq (b = intruder) = false .
	eq r4 = sign(ca, b, pke) .
	eq (sign(ca, b, pke) \in csign(nw(s))) = true .
	red inv2(s, b, pke, sign) implies inv2(fkCert(s, r1, r2, r3, r4), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r4 \in csign(nw(s))) = true .
	eq (b = intruder) = false .
	eq r4 = sign(ca, b, pke) .
	eq (sign(ca, b, pke) \in csign(nw(s))) = false .
	red inv2(s, b, pke, sign) implies inv2(fkCert(s, r1, r2, r3, r4), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r4 \in csign(nw(s))) = true .
	eq (b = intruder) = false .
	eq (r4 = sign(ca, b, pke)) = false .
	red inv2(s, b, pke, sign) implies inv2(fkCert(s, r1, r2, r3, r4), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r4 \in csign(nw(s))) = false .
	red inv2(s, b, pke, sign) implies inv2(fkCert(s, r1, r2, r3, r4), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r3 \in cecfin2(nw(s))) = true .
	red inv2(s, b, pke, sign) implies inv2(fkCfinish2a(s, r1, r2, r3), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r3 \in cecfin2(nw(s))) = false .
	red inv2(s, b, pke, sign) implies inv2(fkCfinish2a(s, r1, r2, r3), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r7 \in cpms(nw(s))) = true .
	red inv2(s, b, pke, sign) implies inv2(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r7 \in cpms(nw(s))) = false .
	red inv2(s, b, pke, sign) implies inv2(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r3 \in cecfin(nw(s))) = true .
	red inv2(s, b, pke, sign) implies inv2(fkCfinisha(s, r1, r2, r3), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r3 \in cecfin(nw(s))) = false .
	red inv2(s, b, pke, sign) implies inv2(fkCfinisha(s, r1, r2, r3), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = true .
	red inv2(s, b, pke, sign) implies inv2(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = false .
	red inv2(s, b, pke, sign) implies inv2(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r1 \in cpms(nw(s))) = false .
	red inv2(s, b, pke, sign) implies inv2(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	red inv2(s, b, pke, sign) implies inv2(fkChello(s, r1, r2, r3, r4), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	red inv2(s, b, pke, sign) implies inv2(fkChello2(s, r1, r2, r3, r4, r5), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	op sign : -> Sign .
	eq (priKey(r3) \in uk(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(fkCkeyex(s, r1, r2, r3), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	op sign : -> Sign .
	eq (priKey(r3) \in uk(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(fkCkeyex(s, r1, r2, r3), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r3 \in cesfin2(nw(s))) = true .
	red inv2(s, b, pke, sign) implies inv2(fkSfinish2a(s, r1, r2, r3), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r3 \in cesfin2(nw(s))) = false .
	red inv2(s, b, pke, sign) implies inv2(fkSfinish2a(s, r1, r2, r3), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r7 \in cpms(nw(s))) = true .
	red inv2(s, b, pke, sign) implies inv2(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r7 \in cpms(nw(s))) = false .
	red inv2(s, b, pke, sign) implies inv2(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r3 \in cesfin(nw(s))) = true .
	red inv2(s, b, pke, sign) implies inv2(fkSfinisha(s, r1, r2, r3), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r3 \in cesfin(nw(s))) = false .
	red inv2(s, b, pke, sign) implies inv2(fkSfinisha(s, r1, r2, r3), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = true .
	red inv2(s, b, pke, sign) implies inv2(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = false .
	red inv2(s, b, pke, sign) implies inv2(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r1 \in cpms(nw(s))) = false .
	red inv2(s, b, pke, sign) implies inv2(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuite .
	op r5 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	red inv2(s, b, pke, sign) implies inv2(fkShello(s, r1, r2, r3, r4, r5), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuite .
	op s : -> Sys .
	op sign : -> Sign .
	red inv2(s, b, pke, sign) implies inv2(fkShello2(s, r1, r2, r3, r4, r5), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	op sign : -> Sign .
	eq (priKey(r3) \in uk(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(fkSkeyex(s, r1, r2, r3, r4, r5), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	op sign : -> Sign .
	eq (priKey(r3) \in uk(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(fkSkeyex(s, r1, r2, r3, r4, r5), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq b = r3 .
	red inv2(s, b, pke, sign) implies inv2(scert(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (b = r3) = false .
	red inv2(s, b, pke, sign) implies inv2(scert(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(scert(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(scert(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	op sign : -> Sign .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3)))) \in nw(s)) = true .
	eq decFin(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = prf-cfin(prf-ms(pms(r10, r9), r4, r6), hFullHs(r2, r3, r4, r5, r6, r7, r8, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3))), r10)) .
	red inv2(s, b, pke, sign) implies inv2(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	op sign : -> Sign .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3)))) \in nw(s)) = true .
	eq (decFin(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = prf-cfin(prf-ms(pms(r10, r9), r4, r6), hFullHs(r2, r3, r4, r5, r6, r7, r8, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3))), r10))) = false .
	red inv2(s, b, pke, sign) implies inv2(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	op sign : -> Sign .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3)))) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	op sign : -> Sign .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	op sign : -> Sign .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = false .
	red inv2(s, b, pke, sign) implies inv2(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	op sign : -> Sign .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	op sign : -> Sign .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	op sign : -> Sign .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	op sign : -> Sign .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	op sign : -> Sign .
	eq ss(s, r2, r3, r5) = none .
	red inv2(s, b, pke, sign) implies inv2(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8) \in nw(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r2 \in r8) = false .
	red inv2(s, b, pke, sign) implies inv2(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq ss(s, r3, r4, r6) = none .
	red inv2(s, b, pke, sign) implies inv2(shello2(s, r1, r2, r3, r4, r5, r6, r7), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(shello2(s, r1, r2, r3, r4, r5, r6, r7), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r6)) \in r7) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(shello2(s, r1, r2, r3, r4, r5, r6, r7), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r6)) \in r7) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(shello2(s, r1, r2, r3, r4, r5, r6, r7), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	op sign : -> Sign .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r6)) \in r7) = false .
	red inv2(s, b, pke, sign) implies inv2(shello2(s, r1, r2, r3, r4, r5, r6, r7), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r1 \in uk(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r4, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq (scertM(r4, r4, r3, cert(r4, pubKey(r4), sign(ca, r4, pubKey(r4)))) \in nw(s)) = true .
	red inv2(s, b, pke, sign) implies inv2(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r4, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq (scertM(r4, r4, r3, cert(r4, pubKey(r4), sign(ca, r4, pubKey(r4)))) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r4, r4, r3, r7, r8, r9) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), b, pke, sign) .
close

--> true 
open INV .
	op b : -> Prin .
	op pke : -> PubKey .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	op sign : -> Sign .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv2(s, b, pke, sign) implies inv2(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), b, pke, sign) .
close

--> Time taken is 2348ms