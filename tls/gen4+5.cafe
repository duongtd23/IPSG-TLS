--> true 
open INV .
	op m : -> Msg .
	op s : -> Sys .
	red inv4(init, m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = true .
	eq decH(r11, pubKey(r9)) = hParams(r4, r6, r10) .
	eq sign(r9) = sign(ca, owner(r9), pubKey(r9)) .
	eq m = cfM(r2, r2, r3, encFin(prf-ckey(prf-ms(pms(r10, r12), r4, r6), r4, r6), prf-cfin(prf-ms(pms(r10, r12), r4, r6), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, pubKeyEx(r12, r2))))) .
	red inv4(s, m) implies inv4(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = true .
	eq decH(r11, pubKey(r9)) = hParams(r4, r6, r10) .
	eq sign(r9) = sign(ca, owner(r9), pubKey(r9)) .
	eq (m = cfM(r2, r2, r3, encFin(prf-ckey(prf-ms(pms(r10, r12), r4, r6), r4, r6), prf-cfin(prf-ms(pms(r10, r12), r4, r6), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, pubKeyEx(r12, r2)))))) = false .
	red inv4(s, m) implies inv4(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = true .
	eq decH(r11, pubKey(r9)) = hParams(r4, r6, r10) .
	eq (sign(r9) = sign(ca, owner(r9), pubKey(r9))) = false .
	red inv4(s, m) implies inv4(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = true .
	eq (decH(r11, pubKey(r9)) = hParams(r4, r6, r10)) = false .
	red inv4(s, m) implies inv4(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = false .
	red inv4(s, m) implies inv4(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = false .
	red inv4(s, m) implies inv4(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = false .
	red inv4(s, m) implies inv4(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = false .
	red inv4(s, m) implies inv4(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = false .
	red inv4(s, m) implies inv4(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = false .
	red inv4(s, m) implies inv4(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq ss(s, r2, r3, r5) = none .
	red inv4(s, m) implies inv4(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = true .
	eq (sh2M(r1, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = true .
	eq decFin(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = prf-sfin2(ms(ss(s, r2, r3, r5)), hAbbrHs(r2, r3, r4, r5, r6, r7, cs(ss(s, r2, r3, r5)))) .
	eq m = cf2M(r2, r2, r3, encFin(prf-ckey(ms(ss(s, r2, r3, r5)), r4, r7), prf-cfin2(ms(ss(s, r2, r3, r5)), hAbbrHs(r2, r3, r4, r5, r6, r7, cs(ss(s, r2, r3, r5)))))) .
	red inv4(s, m) implies inv4(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = true .
	eq (sh2M(r1, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = true .
	eq decFin(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = prf-sfin2(ms(ss(s, r2, r3, r5)), hAbbrHs(r2, r3, r4, r5, r6, r7, cs(ss(s, r2, r3, r5)))) .
	eq (m = cf2M(r2, r2, r3, encFin(prf-ckey(ms(ss(s, r2, r3, r5)), r4, r7), prf-cfin2(ms(ss(s, r2, r3, r5)), hAbbrHs(r2, r3, r4, r5, r6, r7, cs(ss(s, r2, r3, r5))))))) = false .
	red inv4(s, m) implies inv4(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = true .
	eq (sh2M(r1, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = true .
	eq (decFin(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = prf-sfin2(ms(ss(s, r2, r3, r5)), hAbbrHs(r2, r3, r4, r5, r6, r7, cs(ss(s, r2, r3, r5))))) = false .
	red inv4(s, m) implies inv4(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = true .
	eq (sh2M(r1, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = false .
	red inv4(s, m) implies inv4(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = false .
	red inv4(s, m) implies inv4(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv4(s, m) implies inv4(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = false .
	red inv4(s, m) implies inv4(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv4(s, m) implies inv4(chello(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq m = chM(r1, r1, r2, r3, r4) .
	red inv4(s, m) implies inv4(chello(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	eq (m = chM(r1, r1, r2, r3, r4)) = false .
	red inv4(s, m) implies inv4(chello(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq ss(s, r1, r2, r4) = none .
	red inv4(s, m) implies inv4(chello2(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r1, r2, r4) = none) = false .
	eq (r3 \in ur(s)) = true .
	red inv4(s, m) implies inv4(chello2(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r1, r2, r4) = none) = false .
	eq (r3 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r4)) \in r5) = true .
	eq m = ch2M(r1, r1, r2, r3, r4, r5) .
	red inv4(s, m) implies inv4(chello2(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r1, r2, r4) = none) = false .
	eq (r3 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r4)) \in r5) = true .
	eq (m = ch2M(r1, r1, r2, r3, r4, r5)) = false .
	red inv4(s, m) implies inv4(chello2(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r1, r2, r4) = none) = false .
	eq (r3 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r4)) \in r5) = false .
	red inv4(s, m) implies inv4(chello2(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = true .
	red inv4(s, m) implies inv4(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq decH(r12, pubKey(r10)) = hParams(r5, r7, r11) .
	eq sign(r10) = sign(ca, owner(r10), pubKey(r10)) .
	eq m = ckexM(r3, r3, r4, pubKeyEx(r1, r3)) .
	red inv4(s, m) implies inv4(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq decH(r12, pubKey(r10)) = hParams(r5, r7, r11) .
	eq sign(r10) = sign(ca, owner(r10), pubKey(r10)) .
	eq (m = ckexM(r3, r3, r4, pubKeyEx(r1, r3))) = false .
	red inv4(s, m) implies inv4(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq decH(r12, pubKey(r10)) = hParams(r5, r7, r11) .
	eq (sign(r10) = sign(ca, owner(r10), pubKey(r10))) = false .
	red inv4(s, m) implies inv4(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq (decH(r12, pubKey(r10)) = hParams(r5, r7, r11)) = false .
	red inv4(s, m) implies inv4(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = false .
	red inv4(s, m) implies inv4(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = false .
	red inv4(s, m) implies inv4(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = false .
	red inv4(s, m) implies inv4(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = false .
	red inv4(s, m) implies inv4(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = false .
	red inv4(s, m) implies inv4(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	eq m = scertM(intruder, r1, r2, cert(r1, r3, r4)) .
	red inv4(s, m) implies inv4(fkCert(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	eq (m = scertM(intruder, r1, r2, cert(r1, r3, r4))) = false .
	red inv4(s, m) implies inv4(fkCert(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	red inv4(s, m) implies inv4(fkCert(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq m = cf2M(intruder, r1, r2, r3) .
	red inv4(s, m) implies inv4(fkCfinish2a(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq (m = cf2M(intruder, r1, r2, r3)) = false .
	red inv4(s, m) implies inv4(fkCfinish2a(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	red inv4(s, m) implies inv4(fkCfinish2a(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq (r7 \in cpms(nw(s))) = true .
	eq m = cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(r7, r3, r6), r3, r6), prf-cfin2(prf-ms(r7, r3, r6), hAbbrHs(r1, r2, r3, r4, r5, r6, r8)))) .
	red inv4(s, m) implies inv4(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq (r7 \in cpms(nw(s))) = true .
	eq (m = cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(r7, r3, r6), r3, r6), prf-cfin2(prf-ms(r7, r3, r6), hAbbrHs(r1, r2, r3, r4, r5, r6, r8))))) = false .
	red inv4(s, m) implies inv4(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq (r7 \in cpms(nw(s))) = false .
	red inv4(s, m) implies inv4(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	eq m = cfM(intruder, r1, r2, r3) .
	red inv4(s, m) implies inv4(fkCfinisha(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	eq (m = cfM(intruder, r1, r2, r3)) = false .
	red inv4(s, m) implies inv4(fkCfinisha(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	red inv4(s, m) implies inv4(fkCfinisha(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq m = cfM(intruder, r4, r5, encFin(prf-ckey(prf-ms(r1, r6, r8), r6, r8), prf-cfin(prf-ms(r1, r6, r8), hFullHs(r4, r5, r6, r7, r8, r9, r10, cert(r5, r2, r3), r11, encH(priKey(intruder), hParams(r6, r8, r11)), r12)))) .
	red inv4(s, m) implies inv4(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (m = cfM(intruder, r4, r5, encFin(prf-ckey(prf-ms(r1, r6, r8), r6, r8), prf-cfin(prf-ms(r1, r6, r8), hFullHs(r4, r5, r6, r7, r8, r9, r10, cert(r5, r2, r3), r11, encH(priKey(intruder), hParams(r6, r8, r11)), r12))))) = false .
	red inv4(s, m) implies inv4(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = false .
	red inv4(s, m) implies inv4(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = false .
	red inv4(s, m) implies inv4(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq m = chM(intruder, r1, r2, r3, r4) .
	red inv4(s, m) implies inv4(fkChello(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (m = chM(intruder, r1, r2, r3, r4)) = false .
	red inv4(s, m) implies inv4(fkChello(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq m = ch2M(intruder, r1, r2, r3, r4, r5) .
	red inv4(s, m) implies inv4(fkChello2(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (m = ch2M(intruder, r1, r2, r3, r4, r5)) = false .
	red inv4(s, m) implies inv4(fkChello2(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq (priKey(r3) \in uk(s)) = true .
	red inv4(s, m) implies inv4(fkCkeyex(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq (priKey(r3) \in uk(s)) = false .
	eq m = ckexM(intruder, r1, r2, r3) .
	red inv4(s, m) implies inv4(fkCkeyex(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq (priKey(r3) \in uk(s)) = false .
	eq (m = ckexM(intruder, r1, r2, r3)) = false .
	red inv4(s, m) implies inv4(fkCkeyex(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	eq m = sf2M(intruder, r1, r2, r3) .
	red inv4(s, m) implies inv4(fkSfinish2a(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	eq (m = sf2M(intruder, r1, r2, r3)) = false .
	red inv4(s, m) implies inv4(fkSfinish2a(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	red inv4(s, m) implies inv4(fkSfinish2a(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq (r7 \in cpms(nw(s))) = true .
	eq m = sf2M(intruder, r1, r2, encFin(prf-skey(prf-ms(r7, r3, r6), r3, r6), prf-sfin2(prf-ms(r7, r3, r6), hAbbrHs(r2, r1, r3, r4, r5, r6, r8)))) .
	red inv4(s, m) implies inv4(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq (r7 \in cpms(nw(s))) = true .
	eq (m = sf2M(intruder, r1, r2, encFin(prf-skey(prf-ms(r7, r3, r6), r3, r6), prf-sfin2(prf-ms(r7, r3, r6), hAbbrHs(r2, r1, r3, r4, r5, r6, r8))))) = false .
	red inv4(s, m) implies inv4(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq (r7 \in cpms(nw(s))) = false .
	red inv4(s, m) implies inv4(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq m = sfM(intruder, r1, r2, r3) .
	red inv4(s, m) implies inv4(fkSfinisha(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (m = sfM(intruder, r1, r2, r3)) = false .
	red inv4(s, m) implies inv4(fkSfinisha(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	red inv4(s, m) implies inv4(fkSfinisha(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq m = sfM(intruder, r5, r4, encFin(prf-skey(prf-ms(r1, r6, r8), r6, r8), prf-sfin(prf-ms(r1, r6, r8), hFullHs(r4, r5, r6, r7, r8, r9, r10, cert(r5, r2, r3), r11, encH(priKey(intruder), hParams(r6, r8, r11)), r12)))) .
	red inv4(s, m) implies inv4(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (m = sfM(intruder, r5, r4, encFin(prf-skey(prf-ms(r1, r6, r8), r6, r8), prf-sfin(prf-ms(r1, r6, r8), hFullHs(r4, r5, r6, r7, r8, r9, r10, cert(r5, r2, r3), r11, encH(priKey(intruder), hParams(r6, r8, r11)), r12))))) = false .
	red inv4(s, m) implies inv4(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = false .
	red inv4(s, m) implies inv4(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = false .
	red inv4(s, m) implies inv4(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuite .
	op r5 : -> Sid .
	op s : -> Sys .
	eq m = shM(intruder, r1, r2, r3, r4, r5) .
	red inv4(s, m) implies inv4(fkShello(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuite .
	op r5 : -> Sid .
	op s : -> Sys .
	eq (m = shM(intruder, r1, r2, r3, r4, r5)) = false .
	red inv4(s, m) implies inv4(fkShello(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuite .
	op s : -> Sys .
	eq m = sh2M(intruder, r1, r2, r3, r4, r5) .
	red inv4(s, m) implies inv4(fkShello2(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuite .
	op s : -> Sys .
	eq (m = sh2M(intruder, r1, r2, r3, r4, r5)) = false .
	red inv4(s, m) implies inv4(fkShello2(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq (priKey(r3) \in uk(s)) = true .
	red inv4(s, m) implies inv4(fkSkeyex(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq (priKey(r3) \in uk(s)) = false .
	eq m = skexM(intruder, r1, r2, r3, encH(priKey(intruder), hParams(r4, r5, r3))) .
	red inv4(s, m) implies inv4(fkSkeyex(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq (priKey(r3) \in uk(s)) = false .
	eq (m = skexM(intruder, r1, r2, r3, encH(priKey(intruder), hParams(r4, r5, r3)))) = false .
	red inv4(s, m) implies inv4(fkSkeyex(s, r1, r2, r3, r4, r5), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq m = scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) .
	red inv4(s, m) implies inv4(scert(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (m = scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))))) = false .
	red inv4(s, m) implies inv4(scert(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = false .
	red inv4(s, m) implies inv4(scert(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = false .
	red inv4(s, m) implies inv4(scert(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3)))) \in nw(s)) = true .
	eq decFin(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = prf-cfin(prf-ms(pms(r10, r9), r4, r6), hFullHs(r2, r3, r4, r5, r6, r7, r8, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3))), r10)) .
	eq m = sfM(r3, r3, r2, encFin(prf-skey(prf-ms(pms(r10, r9), r4, r6), r4, r6), prf-sfin(prf-ms(pms(r10, r9), r4, r6), hFullHs(r2, r3, r4, r5, r6, r7, r8, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3))), r10)))) .
	red inv4(s, m) implies inv4(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3)))) \in nw(s)) = true .
	eq decFin(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = prf-cfin(prf-ms(pms(r10, r9), r4, r6), hFullHs(r2, r3, r4, r5, r6, r7, r8, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3))), r10)) .
	eq (m = sfM(r3, r3, r2, encFin(prf-skey(prf-ms(pms(r10, r9), r4, r6), r4, r6), prf-sfin(prf-ms(pms(r10, r9), r4, r6), hFullHs(r2, r3, r4, r5, r6, r7, r8, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3))), r10))))) = false .
	red inv4(s, m) implies inv4(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3)))) \in nw(s)) = true .
	eq (decFin(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = prf-cfin(prf-ms(pms(r10, r9), r4, r6), hFullHs(r2, r3, r4, r5, r6, r7, r8, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3))), r10))) = false .
	red inv4(s, m) implies inv4(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3)))) \in nw(s)) = false .
	red inv4(s, m) implies inv4(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv4(s, m) implies inv4(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = false .
	red inv4(s, m) implies inv4(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = false .
	red inv4(s, m) implies inv4(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = false .
	red inv4(s, m) implies inv4(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = false .
	red inv4(s, m) implies inv4(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = false .
	red inv4(s, m) implies inv4(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq ss(s, r2, r3, r5) = none .
	red inv4(s, m) implies inv4(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = true .
	eq m = sf2M(r3, r3, r2, encFin(prf-skey(ms(ss(s, r2, r3, r5)), r4, r7), prf-sfin2(ms(ss(s, r2, r3, r5)), hAbbrHs(r2, r3, r4, r5, r6, r7, cs(ss(s, r2, r3, r5)))))) .
	red inv4(s, m) implies inv4(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = true .
	eq (m = sf2M(r3, r3, r2, encFin(prf-skey(ms(ss(s, r2, r3, r5)), r4, r7), prf-sfin2(ms(ss(s, r2, r3, r5)), hAbbrHs(r2, r3, r4, r5, r6, r7, cs(ss(s, r2, r3, r5))))))) = false .
	red inv4(s, m) implies inv4(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = false .
	red inv4(s, m) implies inv4(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv4(s, m) implies inv4(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = true .
	red inv4(s, m) implies inv4(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = true .
	red inv4(s, m) implies inv4(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq m = shM(r6, r6, r5, r1, r2, r3) .
	red inv4(s, m) implies inv4(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (m = shM(r6, r6, r5, r1, r2, r3)) = false .
	red inv4(s, m) implies inv4(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8) \in nw(s)) = false .
	red inv4(s, m) implies inv4(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = false .
	red inv4(s, m) implies inv4(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq ss(s, r3, r4, r6) = none .
	red inv4(s, m) implies inv4(shello2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = true .
	red inv4(s, m) implies inv4(shello2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r6)) \in r7) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq m = sh2M(r4, r4, r3, r1, r6, cs(ss(s, r3, r4, r6))) .
	red inv4(s, m) implies inv4(shello2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r6)) \in r7) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (m = sh2M(r4, r4, r3, r1, r6, cs(ss(s, r3, r4, r6)))) = false .
	red inv4(s, m) implies inv4(shello2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r6)) \in r7) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv4(s, m) implies inv4(shello2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r6)) \in r7) = false .
	red inv4(s, m) implies inv4(shello2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (r1 \in uk(s)) = true .
	red inv4(s, m) implies inv4(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r4, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq (scertM(r4, r4, r3, cert(r4, pubKey(r4), sign(ca, r4, pubKey(r4)))) \in nw(s)) = true .
	eq m = skexM(r4, r4, r3, pubKeyEx(r1, r4), encH(priKey(r4), hParams(r5, r7, pubKeyEx(r1, r4)))) .
	red inv4(s, m) implies inv4(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r4, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq (scertM(r4, r4, r3, cert(r4, pubKey(r4), sign(ca, r4, pubKey(r4)))) \in nw(s)) = true .
	eq (m = skexM(r4, r4, r3, pubKeyEx(r1, r4), encH(priKey(r4), hParams(r5, r7, pubKeyEx(r1, r4))))) = false .
	red inv4(s, m) implies inv4(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r4, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq (scertM(r4, r4, r3, cert(r4, pubKey(r4), sign(ca, r4, pubKey(r4)))) \in nw(s)) = false .
	red inv4(s, m) implies inv4(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r4, r4, r3, r7, r8, r9) \in nw(s)) = false .
	red inv4(s, m) implies inv4(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv4(s, m) implies inv4(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), m) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op s : -> Sys .
	red inv5(init, pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = true .
	eq decH(r11, pubKey(r9)) = hParams(r4, r6, r10) .
	eq sign(r9) = sign(ca, owner(r9), pubKey(r9)) .
	red inv5(s, pk, k) implies inv5(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = true .
	eq decH(r11, pubKey(r9)) = hParams(r4, r6, r10) .
	eq (sign(r9) = sign(ca, owner(r9), pubKey(r9))) = false .
	red inv5(s, pk, k) implies inv5(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = true .
	eq (decH(r11, pubKey(r9)) = hParams(r4, r6, r10)) = false .
	red inv5(s, pk, k) implies inv5(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq (ckexM(r2, r2, r3, pubKeyEx(r12, r2)) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = true .
	eq (shM(r1, r3, r2, r6, r7, r8) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = true .
	eq (skexM(r1, r3, r2, r10, r11) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = true .
	eq (chM(r2, r2, r3, r4, r5) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = true .
	eq (scertM(r1, r3, r2, r9) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r12 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> Cert .
	op s : -> Sys .
	eq decAsym?(r11, pubKey(r9)) = false .
	red inv5(s, pk, k) implies inv5(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq ss(s, r2, r3, r5) = none .
	red inv5(s, pk, k) implies inv5(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = true .
	eq (sh2M(r1, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = true .
	eq decFin(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = prf-sfin2(ms(ss(s, r2, r3, r5)), hAbbrHs(r2, r3, r4, r5, r6, r7, cs(ss(s, r2, r3, r5)))) .
	red inv5(s, pk, k) implies inv5(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = true .
	eq (sh2M(r1, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = true .
	eq (decFin(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = prf-sfin2(ms(ss(s, r2, r3, r5)), hAbbrHs(r2, r3, r4, r5, r6, r7, cs(ss(s, r2, r3, r5))))) = false .
	red inv5(s, pk, k) implies inv5(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = true .
	eq (sh2M(r1, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq decSym?(r8, prf-skey(ms(ss(s, r2, r3, r5)), r4, r7)) = false .
	red inv5(s, pk, k) implies inv5(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = true .
	eq (ch2M(r2, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Cipher .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (sf2M(r1, r3, r2, r8) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = true .
	red inv5(s, pk, k) implies inv5(chello(s, r1, r2, r3, r4), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	eq (r3 \in ur(s)) = false .
	red inv5(s, pk, k) implies inv5(chello(s, r1, r2, r3, r4), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq ss(s, r1, r2, r4) = none .
	red inv5(s, pk, k) implies inv5(chello2(s, r1, r2, r3, r4, r5), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r1, r2, r4) = none) = false .
	eq (r3 \in ur(s)) = true .
	red inv5(s, pk, k) implies inv5(chello2(s, r1, r2, r3, r4, r5), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r1, r2, r4) = none) = false .
	eq (r3 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r4)) \in r5) = true .
	red inv5(s, pk, k) implies inv5(chello2(s, r1, r2, r3, r4, r5), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r1, r2, r4) = none) = false .
	eq (r3 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r4)) \in r5) = false .
	red inv5(s, pk, k) implies inv5(chello2(s, r1, r2, r3, r4, r5), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = true .
	red inv5(s, pk, k) implies inv5(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq decH(r12, pubKey(r10)) = hParams(r5, r7, r11) .
	eq sign(r10) = sign(ca, owner(r10), pubKey(r10)) .
	red inv5(s, pk, k) implies inv5(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq decH(r12, pubKey(r10)) = hParams(r5, r7, r11) .
	eq (sign(r10) = sign(ca, owner(r10), pubKey(r10))) = false .
	red inv5(s, pk, k) implies inv5(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq (decH(r12, pubKey(r10)) = hParams(r5, r7, r11)) = false .
	red inv5(s, pk, k) implies inv5(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = true .
	eq (shM(r2, r4, r3, r7, r8, r9) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = true .
	eq (skexM(r2, r4, r3, r11, r12) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = true .
	eq (r1 \in uk(s)) = false .
	eq (scertM(r2, r4, r3, r10) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r10 : -> Cert .
	op r11 : -> PubKeyEx .
	op r12 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq decAsym?(r12, pubKey(r10)) = false .
	red inv5(s, pk, k) implies inv5(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	red inv5(s, pk, k) implies inv5(fkCert(s, r1, r2, r3, r4), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	red inv5(s, pk, k) implies inv5(fkCert(s, r1, r2, r3, r4), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	red inv5(s, pk, k) implies inv5(fkCfinish2a(s, r1, r2, r3), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	red inv5(s, pk, k) implies inv5(fkCfinish2a(s, r1, r2, r3), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq (r7 \in cpms(nw(s))) = true .
	red inv5(s, pk, k) implies inv5(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq (r7 \in cpms(nw(s))) = false .
	red inv5(s, pk, k) implies inv5(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	red inv5(s, pk, k) implies inv5(fkCfinisha(s, r1, r2, r3), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	red inv5(s, pk, k) implies inv5(fkCfinisha(s, r1, r2, r3), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = true .
	red inv5(s, pk, k) implies inv5(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = false .
	red inv5(s, pk, k) implies inv5(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = false .
	red inv5(s, pk, k) implies inv5(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuites .
	op s : -> Sys .
	red inv5(s, pk, k) implies inv5(fkChello(s, r1, r2, r3, r4), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op s : -> Sys .
	red inv5(s, pk, k) implies inv5(fkChello2(s, r1, r2, r3, r4, r5), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq (priKey(r3) \in uk(s)) = true .
	red inv5(s, pk, k) implies inv5(fkCkeyex(s, r1, r2, r3), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op s : -> Sys .
	eq (priKey(r3) \in uk(s)) = false .
	red inv5(s, pk, k) implies inv5(fkCkeyex(s, r1, r2, r3), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	red inv5(s, pk, k) implies inv5(fkSfinish2a(s, r1, r2, r3), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	red inv5(s, pk, k) implies inv5(fkSfinish2a(s, r1, r2, r3), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq (r7 \in cpms(nw(s))) = true .
	red inv5(s, pk, k) implies inv5(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> Pms .
	op r8 : -> CipherSuite .
	op s : -> Sys .
	eq (r7 \in cpms(nw(s))) = false .
	red inv5(s, pk, k) implies inv5(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	red inv5(s, pk, k) implies inv5(fkSfinisha(s, r1, r2, r3), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	red inv5(s, pk, k) implies inv5(fkSfinisha(s, r1, r2, r3), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = true .
	red inv5(s, pk, k) implies inv5(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = true .
	eq (r3 \in csign(nw(s))) = false .
	red inv5(s, pk, k) implies inv5(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Pms .
	op r10 : -> Sid .
	op r11 : -> PubKeyEx .
	op r12 : -> PubKeyEx .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (r1 \in cpms(nw(s))) = false .
	red inv5(s, pk, k) implies inv5(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> CipherSuite .
	op r5 : -> Sid .
	op s : -> Sys .
	red inv5(s, pk, k) implies inv5(fkShello(s, r1, r2, r3, r4, r5), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Sid .
	op r5 : -> CipherSuite .
	op s : -> Sys .
	red inv5(s, pk, k) implies inv5(fkShello2(s, r1, r2, r3, r4, r5), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq (priKey(r3) \in uk(s)) = true .
	red inv5(s, pk, k) implies inv5(fkSkeyex(s, r1, r2, r3, r4, r5), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKeyEx .
	op r4 : -> Rand .
	op r5 : -> Rand .
	op s : -> Sys .
	eq (priKey(r3) \in uk(s)) = false .
	red inv5(s, pk, k) implies inv5(fkSkeyex(s, r1, r2, r3, r4, r5), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	red inv5(s, pk, k) implies inv5(scert(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(scert(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(scert(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3)))) \in nw(s)) = true .
	eq decFin(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = prf-cfin(prf-ms(pms(r10, r9), r4, r6), hFullHs(r2, r3, r4, r5, r6, r7, r8, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3))), r10)) .
	red inv5(s, pk, k) implies inv5(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3)))) \in nw(s)) = true .
	eq (decFin(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = prf-cfin(prf-ms(pms(r10, r9), r4, r6), hFullHs(r2, r3, r4, r5, r6, r7, r8, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3))), r10))) = false .
	red inv5(s, pk, k) implies inv5(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, pubKeyEx(r9, r3), encH(priKey(r3), hParams(r4, r6, pubKeyEx(r9, r3)))) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = true .
	eq decSym?(r11, prf-ckey(prf-ms(pms(r10, r9), r4, r6), r4, r6)) = false .
	red inv5(s, pk, k) implies inv5(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r6, r7, r8) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = true .
	eq (ckexM(r1, r2, r3, r10) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r10 : -> PubKeyEx .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> Rand .
	op r7 : -> CipherSuite .
	op r8 : -> Sid .
	op r9 : -> PriKeyEx .
	op s : -> Sys .
	eq (cfM(r1, r2, r3, r11) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq ss(s, r2, r3, r5) = none .
	red inv5(s, pk, k) implies inv5(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = true .
	red inv5(s, pk, k) implies inv5(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r7, r5, cs(ss(s, r2, r3, r5))) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r5) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(sfinish2(s, r1, r2, r3, r4, r5, r6, r7), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = true .
	red inv5(s, pk, k) implies inv5(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = true .
	red inv5(s, pk, k) implies inv5(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8) \in nw(s)) = true .
	red inv5(s, pk, k) implies inv5(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Rand .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r8) = false .
	red inv5(s, pk, k) implies inv5(shello(s, r1, r2, r3, r4, r5, r6, r7, r8), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq ss(s, r3, r4, r6) = none .
	red inv5(s, pk, k) implies inv5(shello2(s, r1, r2, r3, r4, r5, r6, r7), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = true .
	red inv5(s, pk, k) implies inv5(shello2(s, r1, r2, r3, r4, r5, r6, r7), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r6)) \in r7) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	red inv5(s, pk, k) implies inv5(shello2(s, r1, r2, r3, r4, r5, r6, r7), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r6)) \in r7) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(shello2(s, r1, r2, r3, r4, r5, r6, r7), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r6) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r6)) \in r7) = false .
	red inv5(s, pk, k) implies inv5(shello2(s, r1, r2, r3, r4, r5, r6, r7), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (r1 \in uk(s)) = true .
	red inv5(s, pk, k) implies inv5(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r4, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq (scertM(r4, r4, r3, cert(r4, pubKey(r4), sign(ca, r4, pubKey(r4)))) \in nw(s)) = true .
	red inv5(s, pk, k) implies inv5(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r4, r4, r3, r7, r8, r9) \in nw(s)) = true .
	eq (scertM(r4, r4, r3, cert(r4, pubKey(r4), sign(ca, r4, pubKey(r4)))) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r4, r4, r3, r7, r8, r9) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), pk, k) .
close

--> true 
open INV .
	op k : -> PriKeyEx .
	op pk : -> PubKeyEx .
	op r1 : -> PriKeyEx .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> CipherSuite .
	op r9 : -> Sid .
	op s : -> Sys .
	eq (r1 \in uk(s)) = false .
	eq (chM(r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv5(s, pk, k) implies inv5(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9), pk, k) .
close

--> Time taken is 4235ms